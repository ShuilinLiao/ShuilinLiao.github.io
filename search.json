[{"title":"如何用Hexo+Github搭建个人博客1","url":"/2020/10/15/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A21/","content":"<p>如何用Hexo+Github搭建个人博客（上）。主要涉及如何构建环境和搭建博客。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"Git与GiHub的配置\"><a href=\"#Git与GiHub的配置\" class=\"headerlink\" title=\"Git与GiHub的配置\"></a>Git与GiHub的配置</h2><hr>\n<p><strong><u>这一步主要目的为执行Git的安装，并将GitHub远程仓库克隆到本地，以方便后续更新的博客内容同步到GitHub远程仓库</u></strong></p>\n<h3 id=\"GitHub创建个人仓库\"><a href=\"#GitHub创建个人仓库\" class=\"headerlink\" title=\"GitHub创建个人仓库\"></a><strong>GitHub创建个人仓库</strong></h3><p>登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：<a href=\"https://link.zhihu.com/?target=https://github.com/\">Build software better, together</a> 点击GitHub中的New repository创建新仓库，仓库名应该为：<code>用户名.github.io</code> 这个<strong>用户名</strong>使用你的GitHub帐号名称代替。</p>\n<h3 id=\"安装GitHub\"><a href=\"#安装GitHub\" class=\"headerlink\" title=\"安装GitHub\"></a><strong>安装GitHub</strong></h3><p>什么是Git ?简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。如果想要了解Git的细节，参看<a href=\"https://link.zhihu.com/?target=http://weibo.com/liaoxuefeng\">廖雪峰</a>老师的Git教程：<a href=\"https://link.zhihu.com/?target=http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">Git教程</a> 。安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash</p>\n<p>创建名为“Blog”的目录，以下命令可以在git bash界面处理</p>\n<p>设置user.name和user.email配置信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class=\"line\">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>\n\n<p>生成ssh密钥文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>\n\n<p>然后直接三个回车即可，默认不需要设置密码<br>然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制</p>\n<p>打开<a href=\"https://link.zhihu.com/?target=https://github.com/settings/keys\">GitHub_Settings_keys</a> 页面，新建new SSH Key</p>\n<p>Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。<br>在Git Bash中检测GitHub公钥设置是否成功，输入 ssh <a href=\"mailto:&#103;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#x6d;\">&#103;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#x6d;</a> ：</p>\n<p>如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:theme-next&#x2F;theme-next.org.git</span><br></pre></td></tr></table></figure>\n\n<p>主题文件（在Blog目录下执行）：</p>\n<p>克隆博客仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:ShuilinLiao&#x2F;ShuilinLiao.github.io.git</span><br><span class=\"line\">git branch # 显示当前在main分支</span><br><span class=\"line\">git checkout -b source # 创建并切换到source分支 因调整source为默认主支，因此克隆后直接是源代码仓库</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hexo搭建博客\"><a href=\"#hexo搭建博客\" class=\"headerlink\" title=\"hexo搭建博客\"></a>hexo搭建博客</h2><h3 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a><strong>安装Node.js</strong></h3><p>Hexo基于Node.js，Node.js下载地址：<a href=\"https://link.zhihu.com/?target=https://nodejs.org/en/download/\">Download | Node.js</a> 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后，检测Node.js是否安装成功，在命令行中输入 <code>node -v</code> 。检测npm是否安装成功，在命令行中输入<code>npm -v</code> 。</p>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a><strong>安装Hexo</strong></h3><p>Hexo就是我们的个人博客网站的框架， 这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。</p>\n<ul>\n<li>从Git bash里面进入我们Blog目录，使用npm命令安装Hexo，输入：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli </span><br></pre></td></tr></table></figure>\n\n<p>如果碰到卡住问题，可以通过在安装前执行以下命令，改变镜像使安装加快</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n\n<p>ubuntu下安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install nodejs</span><br><span class=\"line\">sudo apt-get install npm</span><br><span class=\"line\">nodejs -v</span><br><span class=\"line\">npm -v</span><br><span class=\"line\">sudo npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br><span class=\"line\">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>安装完成后，初始化我们的博客（在Blog目录下），输入：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo init <span class=\"string\">&quot;xx&#x27;s blog&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>复制/剪切 xx’s blog **<code>内容</code>**至博客仓库 username.github.io</p>\n</li>\n<li><p>更换主题：如果你不喜欢Hexo默认的主题，可以更换不同的主题，主题传送门：<a href=\"https://link.zhihu.com/?target=https://hexo.io/themes/\">Themes</a>。 如：我自己使用的是Next主题，可以在blog目录中的themes文件夹中查看你自己主题是什么。现在把默认主题更改成Next主题，在blog目录中（就是命令行的位置处于blog目录），打开命令行输入以下，将Next主题下载到blog目录的themes主题下的next文件夹中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除theme里的hexo-theme-next（而不是github.io内的.git）内置的.git目录和.github目录，防止同步到Github远程仓库的时候出现冲突；</p>\n</li>\n<li><p>打开<strong>站点</strong>的_config.yml配置文件，修改主题为next；</p>\n</li>\n<li><p>打开<strong>主题</strong>的_config.yml配置文件，不是站点主题文件，找到Scheme Settings。next主题有三个样式，选择你自己喜欢的样式（只需要把行首的#去除，#是注释），选择好后，再次部署网站，hexo g、hexo d，查看效果。</p>\n</li>\n</ul>\n<h3 id=\"本地预览\"><a href=\"#本地预览\" class=\"headerlink\" title=\"本地预览\"></a>本地预览</h3><ul>\n<li>为了检测我们的网站雏形，分别按顺序输入以下三条命令：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new my_test # 新建文章</span><br><span class=\"line\">hexo g # 生成</span><br><span class=\"line\">hexo s # 本地部署</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>完成后，打开浏览器输入地址：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;localhost:40000</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>安装<strong>Typora</strong>软件，为了编辑md文件。</li>\n</ul>\n<h3 id=\"发布网站\"><a href=\"#发布网站\" class=\"headerlink\" title=\"发布网站\"></a>发布网站</h3><p>上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在ShuilinLiao.github.io根目录（即之前初始化的Shuilin’s blog的根目录）里的_config.yml文件称为<strong>站点</strong>配置文件。</p>\n<p>关联Hexo与GitHub，修改根目录下面（我的为ShuilinLiao.github.io）的站点配置文件_config.yml，并保存。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">    type: git</span><br><span class=\"line\">    repo: https:&#x2F;&#x2F;github.com&#x2F;ShuilinLiao&#x2F;username.github.io.git</span><br><span class=\"line\">    branch: master</span><br></pre></td></tr></table></figure>\n\n<p>其实就是给hexo d 这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>这时，我们分别输入三条命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean </span><br><span class=\"line\">hexo g </span><br><span class=\"line\">hexo d <span class=\"comment\"># 部署到网站上</span></span><br></pre></td></tr></table></figure>\n\n<p>其实第三条的 hexo d 就是部署网站命令，d是deploy的缩写。完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 <a href=\"https://link.zhihu.com/?target=http://xxxx.github.io\">http://xxxx.github.io</a> </p>\n<p>你就会发现你的博客已经上线了，可以在网络上被访问了。</p>\n<p>我们开始正式发布上线博客文章，在命令行中输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo n &quot;博客文章名字&quot;</span><br></pre></td></tr></table></figure>\n\n<p>我们会发现在blog根目录下的source文件夹中的_post文件夹中多了一个 <strong>博客文章名字.md</strong> 文件，使用<strong>Typora</strong>软件打开编辑，就可以开始你的个人博客之旅了。</p>\n<p>编辑好之后生成和部署。<code>hexo g</code> 和 <code>hexo d</code></p>\n<p>在hexo d推送网站后，可以将源代码上传至GitHub的博客仓库source分支。</p>\n<p>git bash处跳转到当前博客目录，根目录下输入博客所在目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd username.github.io</span><br></pre></td></tr></table></figure>\n\n<p>一定是在source分支查看文件是否存在修改</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p>提交修改文件至远程仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git add 博客文章名字.md # git add -A</span><br><span class=\"line\">git commit -m &quot;update files&quot;</span><br><span class=\"line\">git push origin source</span><br><span class=\"line\"># git push origin</span><br></pre></td></tr></table></figure>\n\n<p>随后可以在浏览器中输入域名浏览。</p>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><ol>\n<li><a href=\"https://zouhua.top/archives/ec7d7221.html#more\">Hexo搭建个人博客</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/26625249\">GitHub+Hexo 搭建个人网站详细教程</a></li>\n</ol>\n","categories":["Tools","Blog"],"tags":["Hexo","Github","Blog"]},{"title":"P值校正","url":"/2020/12/04/2020-12-04-p_adjust/","content":"<p>多重比较校正方法，并在R中实现。<br><a id=\"more\"></a></p>\n<h1 id=\"为什么要进行多重比较校正\"><a href=\"#为什么要进行多重比较校正\" class=\"headerlink\" title=\"为什么要进行多重比较校正\"></a>为什么要进行多重比较校正</h1><p><strong>当在同一个数据集上进行多次统计检验时，就需要进行多重比较校正。</strong>举个简单的例子，A、B两组被试，我们从每个被试身上得出10个指标。如果我们要研究A、B两组被试的某一个指标是否存在显著差异，那么此时我们只做一次统计分析就行；假设这个指标的p值小于0.05，我们会认为这个指标在A、B两组之间存在显著差异，此时，我们犯错的概率（或者称为假阳性率）是5%。<strong>假设我们把这10个指标都进行了统计分析，即使每个独立的指标的p值都小于0.05，此时我们犯错的概率不再是5%，至少有一个false positive的概率是1－（0.95）^10=0.4013，也就是说此时我们犯错的概率达到40%多，这在统计学上是不可接受的</strong>。因此，需要进行多重比较校正。</p>\n<p>因为假设检验是对<strong>原假设有利</strong>。（对，因为它本质上是一个反证法）。思想：</p>\n<ol>\n<li><strong>先预设原假设是成立的</strong></li>\n<li>那么看看当前的情况在原假设的条件下是不是极小概率事件，比如发生概率&lt;5%</li>\n<li>如果是的话。那原假设就很可疑，迫不得已认为它不成立</li>\n<li>不是的话。那原假设就凑活着用吧</li>\n<li>如果你多次使用假设检验，还好死不死全都通过了的话！<br>你的逻辑链条里将出现大量“就凑活着用吧”的命题，当然不靠谱啦！</li>\n</ol>\n<h1 id=\"矫正方法\"><a href=\"#矫正方法\" class=\"headerlink\" title=\"矫正方法\"></a>矫正方法</h1><p>在多重假设检验中，有不同的控制指标，包括：</p>\n<ul>\n<li>Per comparison error rate (PCER, 比较误差率): Type I Error的期望数目比总假设数</li>\n<li>Family-wise error rate (FWER): 至少出现1次Type I Error </li>\n<li>False discovery rate (FDR, 错误发现率): Type I Error在总拒绝数量中的比率（错误拒绝率）</li>\n<li>Positive false discovery rate (pFDR, 阳性错误发现率): 错误发现的比率<br>在实际应用中，我们一般希望减少Type I Error出现（错误拒绝H0）的可能，因此主要考虑FWER和FDR这两个数据。FWER指标有<strong>Bonferroni 校正</strong>和<strong>Holm’s方法</strong>；FDR指标有Benjamin and Hochberg (BH)方法。</li>\n</ul>\n<h2 id=\"基于Bonferroni-法的校正过程\"><a href=\"#基于Bonferroni-法的校正过程\" class=\"headerlink\" title=\"基于Bonferroni 法的校正过程\"></a>基于<strong>Bonferroni 法</strong>的校正过程</h2><h3 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h3><p>Family-wise error rate ：</p>\n<script type=\"math/tex; mode=display\">\n\\alpha_{FW} = 1-(1-\\alpha_{PC})^c</script><p>c为总检验次数（即P值的个数）; α<sub>PC</sub>为每次比较中的错误率（通常为0.05）。所以在3次比较中，α<sub>FW</sub>的值为 1-(1-0.05)^3 = 0.143。<br>有两种方法进行矫正（如下图）：</p>\n<ol>\n<li>Approach 1： 将原始的p-value和 α<sub>PC</sub> /3 = 0.05/3 = 0.017 比较，原始P value小于 矫正后的p-value（如0.017）即可认为是显著差异的p-value；</li>\n<li>Approach 2：将原始的p-value和总检验次数（如3）相乘，得到矫正后的p-value，如果矫正后的p-value可认为是显著差异的p-value；<img src=\"/2020/12/04/2020-12-04-p_adjust/1607063160.jpg\" class title=\"This is an test image\">\n</li>\n</ol>\n<p>如果原始的P值为0.05，检验次数为10000次，那么在Bonferroni 校正中，校正的阈值就等于5%/ 10000 = 0.000005，所有P值超过0.00005的结果都被认为是不可靠的。这样的话假阳性结果在10000次检验中出现的次数为 10000 * 0.000005 =0.5，还不到1次。</p>\n<h3 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h3><p>Bonferroni 校正法可以称作是“最简单粗暴有效”的校正方法，它拒绝了所有的假阳性结果发生的可能性，通过对p值的阈值进行校正来实现消除假阳性结果。但是这也存在问题：Bonferroni 委实太过严格，被校正后的阈值拒绝的不只有假阳性结果，很多阳性结果也会被它拒绝。</p>\n<h3 id=\"R实现\"><a href=\"#R实现\" class=\"headerlink\" title=\"R实现\"></a>R实现</h3><figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">p=c(<span class=\"number\">0.053</span>,<span class=\"number\">0.001</span>,<span class=\"number\">0.045</span>,<span class=\"number\">0.03</span>,<span class=\"number\">0.02</span>,<span class=\"number\">0.01</span>)</span><br><span class=\"line\">p.adjust(p,<span class=\"string\">&quot;bonferroni&quot;</span>)</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">0.318</span> <span class=\"number\">0.006</span> <span class=\"number\">0.270</span> <span class=\"number\">0.180</span> <span class=\"number\">0.120</span> <span class=\"number\">0.060</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"基于BH法的FDR校正过程\"><a href=\"#基于BH法的FDR校正过程\" class=\"headerlink\" title=\"基于BH法的FDR校正过程\"></a>基于<strong>BH法</strong>的FDR校正过程</h2><h3 id=\"算法-1\"><a href=\"#算法-1\" class=\"headerlink\" title=\"算法\"></a>算法</h3><p>举个例子，我们最开始设定的情况中进行了10000次检验，这次我们设定FDR在一定的范围，如FDR&lt;0.05，如果我们的检验对象为差异表达的基因，那么在10000次检验中假如得到了500个基因，那么这500个基因中的假阳性结果小于 500*5% = 25 个。比较常用的BH发算法如下：</p>\n<ol>\n<li>BH 法需要将总计m次检验的结果按由小到大进行排序，k为其中一次检验结果的P值所对应的排名。</li>\n<li>找到符合原始阈值α的最大的k值，满足P(k)&lt;=α*k/m，认为排名从1到k的所有检验存在显著差异，并计算对应的q值公式为q = p*(m/k)。</li>\n<li><p>举个例子，如果我们有总共六个结果进行FDR校正：</p>\n<img src=\"/2020/12/04/2020-12-04-p_adjust/1607066685.jpg\" class title=\"This is an test image\">\n</li>\n<li><p>按α=0.05进行计算：<br>排名第四的 P (4) = 0.03 &lt; 0.05*4/6 = 0.033，符合要求<br>排名第五的 P (5)= 0.045 &gt; 0.05*5/6 = 0.041，不满足P(k)&lt;=α*k/m，因此在这个列表里排名前四的G2,G6,G5,G4 为具有显著差异的基因。</p>\n</li>\n</ol>\n<p>我们也可以用q值进行FDR校正：</p>\n<ol>\n<li><p>q-value = P * (k/m)</p>\n<img src=\"/2020/12/04/2020-12-04-p_adjust/1607066775.jpg\" class title=\"This is an test image\">\n</li>\n<li><p>排名第五的G3，其q值大于0.05，故G2,G6,G5,G4 为具有显著差异的基因。</p>\n</li>\n</ol>\n<h3 id=\"优缺点-1\"><a href=\"#优缺点-1\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h3><p>相对Bonferroni 来说，FDR温和得多，这种校正方法不追求完全没有假阳性结果，而是将假阳性结果和真阳性的比例控制在一定范围内。</p>\n<h3 id=\"R实现-1\"><a href=\"#R实现-1\" class=\"headerlink\" title=\"R实现\"></a>R实现</h3><figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">p=c(<span class=\"number\">0.053</span>,<span class=\"number\">0.001</span>,<span class=\"number\">0.045</span>,<span class=\"number\">0.03</span>,<span class=\"number\">0.02</span>,<span class=\"number\">0.01</span>)</span><br><span class=\"line\">p.adjust(p,<span class=\"string\">&quot;BH&quot;</span>)</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">0.053</span> <span class=\"number\">0.006</span> <span class=\"number\">0.053</span> <span class=\"number\">0.045</span> <span class=\"number\">0.040</span> <span class=\"number\">0.030</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p><a href=\"https://www.jianshu.com/p/77f9c858a072\">谈一谈两种常用的多重比较校正方法</a><br><a href=\"https://zhuanlan.zhihu.com/p/95530040\">多重检验，P值校正</a><br><a href=\"https://zhuanlan.zhihu.com/p/31027746\">多重假设检验及其生物学应用</a><br><a href=\"https://zhuanlan.zhihu.com/p/51546651\">多重假设检验：Bonferroni 和 FDR</a><br><a href=\"https://www.youtube.com/watch?v=rMuNniCTsOw\">how2stats - What is the Bonferroni Correction?</a><br><a href=\"https://www.youtube.com/watch?v=K8LQSvtjcEo\">StatQuest - False Discovery Rates, FDR, clearly explained</a></p>\n<p>参考文章如引起任何侵权问题，可以与我<a href=\"liaoshuilin@outlook.com\">联系</a>，谢谢。</p>\n","categories":["Math","Comparison"],"tags":["p-value","Multiple comparison"]},{"title":"学习数学、python和单细胞测序分析计划","url":"/2020/12/01/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/","content":"<div id=\"hexo-blog-encrypt\" data-wpm=\"抱歉, 这个密码看着不太对, 请再试试.\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" id=\"hbePass\" placeholder=\"\" />\n    <label for=\"hbePass\">您好, 这里需要密码.</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"a2a3ad9b91bddc33aed412e066c060b64399ede40bdcda1a5220a6a098272e0b\">8345408e92e0f78304ecb1463714cdd8690d8aac7de3a24515a3076e5345d2ac0f6bf90bda28942bdc9b3be379007b0d34104edb6c60a85c47d83a59131ad5df3bb59fd8f22a0b83601728f394bc5a7cb93b142d2094fcfc3f9b421b7e1d678a1260776ff37617b4423ede3356a2ebb55494585def38ded10d458f6e3539e4aca48926e73d36cf423e6d850fad4ad982df2ce952aacb97a04ebcce338546c2c2cb50eb224929805ba1582a81a0d5b62c0e9a5f5c66692272466eb099dcdd66f0216caf69751a4484dcdd8b3900b7b0af10d68689ea069e55041bffb287bdd9ea8a78cc7403be1e035d4e96438e3c8cb92e286b3afe7a83d9444fcc62345bfef8850e9821a2a733b8db356e81f66fbc06deeb68856ce52d11b6952a578d5d7884928b6cce70967b1b028187439313117a00acdfd63a62d62230dd1af449ba4bbf35a2bff620dd1c89cac64020549cdda089a2bb77f13541a4aafba35882b451ca1c1b08fecd55daf7e87172e520d364e795594bde5b2538e69462874d553f274a0225ec2ac3360f59d66a2599521b31d0234028349987501460cdf64d56c556f26e8c2246bab2c17c475b91d4c774ca02fc5182a9df210669042df5b8129b3923314c7e8937b64fa62af9cde072e55f4c1f607998e2edf5299df7e0801b7a559c1ba9323e5b8d30c95e4da6435d2c0eff8b33c38dd9b4a345148d1c71ef32b4f1b9e1ece49eb00d3f848961f6659fae64c7fa5ad2ee13abcd4cf7eaf49e1a739195e2ea676b6b006e679341c47b9fc32f3d86bf56c7712734116d4bcc552723f54524201f9593a3a76a592e17469dafa0003b6d00faf59835ea97c9afd6a1716ff36e8f11c8662361a5182b1746f98a171b0399a4b63c17f8a72497ee8a3b77aca49b8f1efaace3ab8179dee0f29f82ebcd4af11ddab4616840622c18eb8aaa283416eea9fbe776a47b2b0b53e135e995eb8d725c00e425d25948d79c4cc9590c065ec5a5f1c317189ee606f6a8491f4ee19811eda9c942bb72a1ef337f62eaf1183e07699549f00b5794989dacb2152d41030c556fa38c0e56a5de2cf3ec64d8a2fe391dce40913b2991f39bde2e73e5cb33ff28372a5b8d2cbc03ea4ffcf1f6c10d1a2eaaece23cc62bfabdb92264607690dc22110f3bb5322b05303f571a20b3e27a9b4c4b8b672295cee9b4fc234f66b30342671f6b5c2a1a07d7e648a5ff7c8f35004b0b5902436b704ec71c209de7340782cc9b0773e07d599413af2a6852215d03490fbbf5dac911c63a9588a62e8353fd36c88ed7bd90b09f33072ecc2fa36f5a58a7acbc9cdb7cd55ffa18dc2b151efba0acf353883967e4f2ee01260f7e92ced912bb62804eb387b66e8e96676cdf11b281f6d4298d4c49dd50af3bcff286f9d3f0ef68f359cf183c8a2769e761b78fa1d17718e32b6e4fb2b938631bf7757b195277d4a3c5edf74aded6fd2fecc4d5e08e7ad861e957785a723cfa1412e49573893866f86d0380ced5fe68df2ab05d498714ae040decf943e6ba60c4379fd6f744f0c12f8e454a3c5cbe03f798b2d1a55dc857fd2081555d92cfbcc1b19f60977f4c8878a81ee005dc6cecfdd227d5d1e5edc2f36b535f1014e0bed4c50c7ab9f78deeef95d8a9c3bd765bb3a10905239f28fb06168dd63d69bcf45823b47dc372601beb4357affc755866ebcdf9a1141e7e4a55f86f2f37f612338f50b4d91f195476b2edc7e7ab9f85a82aedec1422b87644475e61acc30b4745321ef1d8c9c1cd00c0d8bca451ced6dc192b08506104d71e4863d64508378b768d656a4becbfdef64aacc47842c0e0e46961ed09f46c2f0ee124c67f6ad647e58754c22ba04e71cf9e1a0b964db45360edeb18d96db7cf4fa9005cbbc1090e5edad7109e1ba51677b986f10900a9ca8ed8a7efa0c7e7c92e5070b3b134527a45c235330374fc10cda103bc6e826c3f560dc32d2b58d65450a58c5b768eaebaeddd93c9618e651ca93be33962fe612fb8ab154eab71ca5bf44d3b77eac96e173d41686ca6fefd120d4c21063a25966bec9fa1b1e5da914eb0a5e4d4b68e9db8ea8db8d6e11f0423c568fcd3df8225ae7393c35c86cca2988f269555f3994508c76c3868b9e65ba0d09754c679db89c205d43d49febe44528dee2eadc156fb052cb433440d84ebd9c0fd125ca1286e9e3589bdcce2a1525396558006ce8298196fd830da75f8896ebfdab51bf7855d05573ef30680c8d5f11b87c136d5bb1ff658354833f3571337515ff1734c5947bda9f4e4be6818f84b47b230fedf021361cfa6286c85d34273a0c8a7fefd947f7491d432698c9586203b71e29b4d4ed34421ace1e670c124bed4dd92bb2a8426f2a8e5792bc84d6a6dad9135bc6d0c0b1cf91c9d85e1630ce27969ce628e20b27dcaf547ffe5e6cc88c16f40ea45485d9914598c733603366718ca7392674070c2922b46157a1eddb54e4a7ccf358b21a7791c63628053d6569caf41d31aa99d7494b70c0227716893cba56fae239d4021db1d878f109885912a2384d0bef225e2c68485cdb3e31acc60fee28d4a860318002eea558c51533b20fcd9841a4969b8a4853016a81c749142b715973a4d69da91dbf9fdc982249721269684442146a91944e180523eccb11dab186782b2c17dacbc0d69054640e87e394cb1e4243aa362595a4c628a95d04cb377f112828987f4bd313ca2e60704b1fa7162247f35e900385b63d06fa8b7122b44c167571a3fb1ff24302c7052698362c1afa84d57411a6f696108d3a3f56e1e118f29c2c29daabc251e335ef1c5bc52579dd9b11387b984df35610733138a3ecd4ebc96e8b1b6d6d04426be3f48fd31259497f0e8c33cfdabf82d913460cc4e3b2a84c2688fad2f7486c7ac73ce6e65f2822f84c6163932c09e86c45bb4cc8ab66afd2848523752379c6e4a726abb5bd24f52781e6b71147967c243936660e2a48cf17496e7c7b6c9909164fb60dbd5bc971aa2058732bf6889a865d684ff8f21f361f4d0f0b1</script>\n</div>\n<script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","categories":["Private"],"tags":["Plan"]},{"title":"如何绘制带有显著性标记的箱线图/柱状图","url":"/2020/11/26/2020-11-26-boxplot/","content":"<p>介绍如何用R绘制多组比较的箱线图/柱状图。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"数据准备\"><a href=\"#数据准备\" class=\"headerlink\" title=\"数据准备\"></a>数据准备</h2><p>Prerequisites<br>Make sure you have installed the following R packages:<br>tidyverse for data manipulation and visualization<br>ggpubr for creating easily publication ready plots<br>rstatix provides pipe-friendly R functions for easy statistical analyses.</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">library</span>(ggpubr)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">## Loading required package: ggplot2</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">## RStudio Community is a great place to get help: https:&#x2F;&#x2F;community.rstudio.com&#x2F;c&#x2F;tidyverse</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">## Registered S3 method overwritten by &#39;data.table&#39;:</span><br><span class=\"line\">##   method           from</span><br><span class=\"line\">##   print.data.table</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">library</span>(rstatix)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">## </span><br><span class=\"line\">## Attaching package: &#39;rstatix&#39;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">## The following object is masked from &#39;package:stats&#39;:</span><br><span class=\"line\">## </span><br><span class=\"line\">##     filter</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Transform `dose` into factor variable </span></span><br><span class=\"line\">df &lt;- ToothGrowth </span><br><span class=\"line\">df$dose &lt;- as.factor(df$dose) </span><br><span class=\"line\"><span class=\"comment\"># Add a random grouping variable </span></span><br><span class=\"line\">df$group &lt;- factor(rep(c(<span class=\"string\">&quot;grp1&quot;</span>, <span class=\"string\">&quot;grp2&quot;</span>), <span class=\"number\">30</span>)) </span><br><span class=\"line\">head(df, <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"每个panel中包含两组数据\"><a href=\"#每个panel中包含两组数据\" class=\"headerlink\" title=\"每个panel中包含两组数据\"></a>每个panel中包含两组数据</h2><h3 id=\"使用一个变量进行分面\"><a href=\"#使用一个变量进行分面\" class=\"headerlink\" title=\"使用一个变量进行分面\"></a>使用一个变量进行分面</h3><p>Statistical tests<br>使用dose变量进行分面，并在x轴上水平上比较supp变量。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">stat.test &lt;- df %&gt;%</span><br><span class=\"line\">  group_by(dose) %&gt;%</span><br><span class=\"line\">  t_test(len ~ supp) %&gt;%</span><br><span class=\"line\">  adjust_pvalue(method = <span class=\"string\">&quot;bonferroni&quot;</span>) %&gt;%</span><br><span class=\"line\">  add_significance()</span><br><span class=\"line\">stat.test</span><br></pre></td></tr></table></figure>\n\n<p>Box plots</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Create a box plot</span></span><br><span class=\"line\">bxp &lt;- ggboxplot(</span><br><span class=\"line\">  df, x = <span class=\"string\">&quot;supp&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, fill = <span class=\"string\">&quot;#00AFBB&quot;</span>, </span><br><span class=\"line\">  facet.by = <span class=\"string\">&quot;dose&quot;</span></span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Make facet and add p-values</span></span><br><span class=\"line\">stat.test &lt;- stat.test %&gt;% add_xy_position(x = <span class=\"string\">&quot;supp&quot;</span>)</span><br><span class=\"line\">bxp + stat_pvalue_manual(stat.test)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-6-1.png\" alt=\"plot of chunk unnamed-chunk-6\"></p>\n<p>Box plots 显示P值<br>使分面比例自由，并添加散点Make the facet scale free and add jitter points<br>使用 <code>bracket.nudge.y</code>将括号位置向下调整<br>不显示ns (non-significant)<br>显示矫正之后并且Pvalue显著的标志<br>在p-value标签和plot边框之间添加10%的空格</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">bxp &lt;- ggboxplot(</span><br><span class=\"line\">  df, x = <span class=\"string\">&quot;supp&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, fill = <span class=\"string\">&quot;#00AFBB&quot;</span>, </span><br><span class=\"line\">  facet.by = <span class=\"string\">&quot;dose&quot;</span>, scales = <span class=\"string\">&quot;free&quot;</span>, add = <span class=\"string\">&quot;jitter&quot;</span></span><br><span class=\"line\">  )</span><br><span class=\"line\">bxp +  </span><br><span class=\"line\">  stat_pvalue_manual(</span><br><span class=\"line\">    stat.test, bracket.nudge.y = -<span class=\"number\">2</span>, hide.ns = <span class=\"literal\">TRUE</span>,</span><br><span class=\"line\">    label = <span class=\"string\">&quot;&#123;p.adj&#125;&#123;p.adj.signif&#125;&quot;</span></span><br><span class=\"line\">    ) +</span><br><span class=\"line\">  scale_y_continuous(expand = expansion(mult = c(<span class=\"number\">0.05</span>, <span class=\"number\">0.1</span>)))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-7-1.png\" alt=\"plot of chunk unnamed-chunk-7\"></p>\n<p>Bar plots<br>使用 add = “mean_sd”用于创建error bar(mean +/- SD)。<br>需要使用汇总统计函数来自动计算p-value标签位置 add_xy_position()。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Create a bar plot with error bars (mean +/- sd)</span></span><br><span class=\"line\">bp &lt;- ggbarplot(</span><br><span class=\"line\">  df, x = <span class=\"string\">&quot;supp&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, add = <span class=\"string\">&quot;mean_sd&quot;</span>, </span><br><span class=\"line\">  fill = <span class=\"string\">&quot;#00AFBB&quot;</span>, facet.by = <span class=\"string\">&quot;dose&quot;</span></span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Add p-values onto the bar plots</span></span><br><span class=\"line\">stat.test &lt;- stat.test %&gt;% add_xy_position(fun = <span class=\"string\">&quot;mean_sd&quot;</span>, x = <span class=\"string\">&quot;supp&quot;</span>)</span><br><span class=\"line\">bp + stat_pvalue_manual(stat.test)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-8-1.png\" alt=\"plot of chunk unnamed-chunk-8\"></p>\n<p>Bar plots with jitter points<br>在计算p-value标签的位置时，需要设定fun = “max”，<br>从而将括号将从数据点的最大值开始，避免数据点和括号之间的重叠。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Create a bar plot with error bars (mean +/- sd)</span></span><br><span class=\"line\">bp &lt;- ggbarplot(</span><br><span class=\"line\">  df, x = <span class=\"string\">&quot;supp&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, add = c(<span class=\"string\">&quot;mean_sd&quot;</span>, <span class=\"string\">&quot;jitter&quot;</span>), </span><br><span class=\"line\">  fill = <span class=\"string\">&quot;#00AFBB&quot;</span>, facet.by = <span class=\"string\">&quot;dose&quot;</span></span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Add p-values onto the bar plots</span></span><br><span class=\"line\">stat.test &lt;- stat.test %&gt;% add_xy_position(fun = <span class=\"string\">&quot;max&quot;</span>, x = <span class=\"string\">&quot;supp&quot;</span>)</span><br><span class=\"line\">bp + stat_pvalue_manual(stat.test)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-9-1.png\" alt=\"plot of chunk unnamed-chunk-9\"></p>\n<h3 id=\"使用两个变量进行分面\"><a href=\"#使用两个变量进行分面\" class=\"headerlink\" title=\"使用两个变量进行分面\"></a>使用两个变量进行分面</h3><p>使用dose和group变量进行分面，并在x轴上水平上比较supp变量。</p>\n<p>Statistical tests</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">stat.test &lt;- df %&gt;%</span><br><span class=\"line\">  group_by(group, dose) %&gt;%</span><br><span class=\"line\">  t_test(len ~ supp) %&gt;%</span><br><span class=\"line\">  adjust_pvalue(method = <span class=\"string\">&quot;bonferroni&quot;</span>) %&gt;%</span><br><span class=\"line\">  add_significance()</span><br><span class=\"line\">stat.test </span><br></pre></td></tr></table></figure>\n\n<p>Box plots</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Create box plots with significance levels</span></span><br><span class=\"line\"><span class=\"comment\"># Hide ns (non-significant)</span></span><br><span class=\"line\">stat.test &lt;- stat.test %&gt;% add_xy_position(x = <span class=\"string\">&quot;supp&quot;</span>)</span><br><span class=\"line\">ggboxplot(</span><br><span class=\"line\">  df, x = <span class=\"string\">&quot;supp&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, fill = <span class=\"string\">&quot;#E7B800&quot;</span>,</span><br><span class=\"line\">  facet = c(<span class=\"string\">&quot;group&quot;</span>, <span class=\"string\">&quot;dose&quot;</span>)</span><br><span class=\"line\">  ) +</span><br><span class=\"line\">  stat_pvalue_manual(stat.test, hide.ns = <span class=\"literal\">TRUE</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-11-1.png\" alt=\"plot of chunk unnamed-chunk-11\"></p>\n<p>Bar plots</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Create bar plots with significance levels</span></span><br><span class=\"line\"><span class=\"comment\"># Hide ns (non-significant)</span></span><br><span class=\"line\">stat.test &lt;- stat.test %&gt;% add_xy_position(x = <span class=\"string\">&quot;supp&quot;</span>, fun = <span class=\"string\">&quot;mean_sd&quot;</span>)</span><br><span class=\"line\">ggbarplot(</span><br><span class=\"line\">  df, x = <span class=\"string\">&quot;supp&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, fill = <span class=\"string\">&quot;#E7B800&quot;</span>,</span><br><span class=\"line\">  add = c(<span class=\"string\">&quot;mean_sd&quot;</span>, <span class=\"string\">&quot;jitter&quot;</span>), facet = c(<span class=\"string\">&quot;group&quot;</span>, <span class=\"string\">&quot;dose&quot;</span>)</span><br><span class=\"line\">  ) +</span><br><span class=\"line\">  stat_pvalue_manual(stat.test, hide.ns = <span class=\"literal\">TRUE</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-12-1.png\" alt=\"plot of chunk unnamed-chunk-12\"></p>\n<h2 id=\"每个panel中包含三组或以上的数据\"><a href=\"#每个panel中包含三组或以上的数据\" class=\"headerlink\" title=\"每个panel中包含三组或以上的数据\"></a>每个panel中包含三组或以上的数据</h2><h3 id=\"使用一个变量进行分面-1\"><a href=\"#使用一个变量进行分面-1\" class=\"headerlink\" title=\"使用一个变量进行分面\"></a>使用一个变量进行分面</h3><h4 id=\"执行所有两两比较\"><a href=\"#执行所有两两比较\" class=\"headerlink\" title=\"执行所有两两比较\"></a>执行所有两两比较</h4><p>使用supp变量进行分组，然后对dose变量之间的水平进行两两比较。<br>Statistical test:</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">stat.test &lt;- df %&gt;%</span><br><span class=\"line\">  group_by(supp) %&gt;%</span><br><span class=\"line\">  t_test(len ~ dose)</span><br><span class=\"line\">stat.test</span><br></pre></td></tr></table></figure>\n\n<p>在图中添加p值。<br>ggplot2中scale_y_continuous(expand = expand (mult = c(0,0.1))用于在标签和图形顶部边框之间添加更多空格</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Box plots with p-values</span></span><br><span class=\"line\">stat.test &lt;- stat.test %&gt;% add_y_position()</span><br><span class=\"line\">ggboxplot(df, x = <span class=\"string\">&quot;dose&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, fill = <span class=\"string\">&quot;#FC4E07&quot;</span>, facet.by = <span class=\"string\">&quot;supp&quot;</span>) +</span><br><span class=\"line\">  stat_pvalue_manual(stat.test, label = <span class=\"string\">&quot;p.adj.signif&quot;</span>, tip.length = <span class=\"number\">0.01</span>) +</span><br><span class=\"line\">  scale_y_continuous(expand = expansion(mult = c(<span class=\"number\">0.05</span>, <span class=\"number\">0.1</span>)))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-14-1.png\" alt=\"plot of chunk unnamed-chunk-14\"></p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Bar plot with p-values</span></span><br><span class=\"line\"><span class=\"comment\"># Add 10% space on the y-axis above the box plots</span></span><br><span class=\"line\">stat.test &lt;- stat.test %&gt;% add_y_position(fun = <span class=\"string\">&quot;mean_sd&quot;</span>)</span><br><span class=\"line\">ggbarplot(</span><br><span class=\"line\">  df, x = <span class=\"string\">&quot;dose&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, fill = <span class=\"string\">&quot;#FC4E07&quot;</span>,</span><br><span class=\"line\">  add = <span class=\"string\">&quot;mean_sd&quot;</span>, facet.by = <span class=\"string\">&quot;supp&quot;</span></span><br><span class=\"line\">  ) + </span><br><span class=\"line\">  stat_pvalue_manual(stat.test,  label = <span class=\"string\">&quot;p.adj.signif&quot;</span>, tip.length = <span class=\"number\">0.01</span>) +</span><br><span class=\"line\">  scale_y_continuous(expand = expansion(mult = c(<span class=\"number\">0.05</span>, <span class=\"number\">0.1</span>)))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-15-1.png\" alt=\"plot of chunk unnamed-chunk-15\"></p>\n<h4 id=\"与参照组进行两两比较\"><a href=\"#与参照组进行两两比较\" class=\"headerlink\" title=\"与参照组进行两两比较\"></a>与参照组进行两两比较</h4><p>Statistical test:</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">stat.test &lt;- df %&gt;%</span><br><span class=\"line\">  group_by(supp) %&gt;%</span><br><span class=\"line\">  t_test(len ~ dose, ref.group = <span class=\"string\">&quot;0.5&quot;</span>)</span><br><span class=\"line\">stat.test</span><br></pre></td></tr></table></figure>\n\n<p>Box plots </p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">stat.test &lt;- stat.test %&gt;% add_y_position()</span><br><span class=\"line\">ggboxplot(df, x = <span class=\"string\">&quot;dose&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, fill = <span class=\"string\">&quot;#FC4E07&quot;</span>, facet.by = <span class=\"string\">&quot;supp&quot;</span>) +</span><br><span class=\"line\">  stat_pvalue_manual(stat.test, label = <span class=\"string\">&quot;p.adj.signif&quot;</span>, tip.length = <span class=\"number\">0.01</span>) +</span><br><span class=\"line\">  scale_y_continuous(expand = expansion(mult = c(<span class=\"number\">0.05</span>, <span class=\"number\">0.1</span>)))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-17-1.png\" alt=\"plot of chunk unnamed-chunk-17\"></p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Show only significance levels at x = group2</span></span><br><span class=\"line\"><span class=\"comment\"># Move down significance symbols using vjust</span></span><br><span class=\"line\">stat.test &lt;- stat.test %&gt;% add_y_position()</span><br><span class=\"line\">ggboxplot(df, x = <span class=\"string\">&quot;dose&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, fill = <span class=\"string\">&quot;#FC4E07&quot;</span>, facet.by = <span class=\"string\">&quot;supp&quot;</span>) +</span><br><span class=\"line\">  stat_pvalue_manual(stat.test, label = <span class=\"string\">&quot;p.adj.signif&quot;</span>, x = <span class=\"string\">&quot;group2&quot;</span>, vjust = <span class=\"number\">2</span>) </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-18-1.png\" alt=\"plot of chunk unnamed-chunk-18\"></p>\n<p>Bar plot</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Add 10% space on the y-axis above the box plots</span></span><br><span class=\"line\">stat.test &lt;- stat.test %&gt;% add_y_position(fun = <span class=\"string\">&quot;mean_sd&quot;</span>)</span><br><span class=\"line\">ggbarplot(</span><br><span class=\"line\">  df, x = <span class=\"string\">&quot;dose&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, fill = <span class=\"string\">&quot;#FC4E07&quot;</span>,</span><br><span class=\"line\">  add = c(<span class=\"string\">&quot;mean_sd&quot;</span>, <span class=\"string\">&quot;jitter&quot;</span>), facet.by = <span class=\"string\">&quot;supp&quot;</span></span><br><span class=\"line\">  ) + </span><br><span class=\"line\">  stat_pvalue_manual(stat.test,  label = <span class=\"string\">&quot;p.adj.signif&quot;</span>, tip.length = <span class=\"number\">0.01</span>) +</span><br><span class=\"line\">  scale_y_continuous(expand = expansion(mult = c(<span class=\"number\">0.05</span>, <span class=\"number\">0.1</span>)))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-19-1.png\" alt=\"plot of chunk unnamed-chunk-19\"></p>\n<h3 id=\"使用两个变量进行分面-1\"><a href=\"#使用两个变量进行分面-1\" class=\"headerlink\" title=\"使用两个变量进行分面\"></a>使用两个变量进行分面</h3><p>Statistical test<br>使用dose和group变量进行分面，并在x轴上水平上比较supp变量。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">stat.test &lt;- df %&gt;%</span><br><span class=\"line\">  group_by(group, supp) %&gt;%</span><br><span class=\"line\">  t_test(len ~ dose) %&gt;%</span><br><span class=\"line\">  adjust_pvalue(method = <span class=\"string\">&quot;bonferroni&quot;</span>) %&gt;%</span><br><span class=\"line\">  add_significance()</span><br><span class=\"line\">stat.test </span><br></pre></td></tr></table></figure>\n\n<p>Box plots</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Create box plots with significance levels</span></span><br><span class=\"line\"><span class=\"comment\"># Hide ns (non-significant)</span></span><br><span class=\"line\"><span class=\"comment\"># Add 15% space between labels and the plot top border</span></span><br><span class=\"line\">stat.test &lt;- stat.test %&gt;% add_xy_position(x = <span class=\"string\">&quot;dose&quot;</span>)</span><br><span class=\"line\">ggboxplot(</span><br><span class=\"line\">  df, x = <span class=\"string\">&quot;dose&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, fill = <span class=\"string\">&quot;#FC4E07&quot;</span>,</span><br><span class=\"line\">  facet = c(<span class=\"string\">&quot;group&quot;</span>, <span class=\"string\">&quot;supp&quot;</span>)</span><br><span class=\"line\">  ) +</span><br><span class=\"line\">  stat_pvalue_manual(stat.test, hide.ns = <span class=\"literal\">TRUE</span>) +</span><br><span class=\"line\">  scale_y_continuous(expand = expansion(mult = c(<span class=\"number\">0.05</span>, <span class=\"number\">0.15</span>)))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-21-1.png\" alt=\"plot of chunk unnamed-chunk-21\"></p>\n<p>Bar plots</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Create bar plots with significance levels</span></span><br><span class=\"line\"><span class=\"comment\"># Hide ns (non-significant)</span></span><br><span class=\"line\"><span class=\"comment\"># Add 15% space between labels and the plot top border</span></span><br><span class=\"line\">stat.test &lt;- stat.test %&gt;% add_xy_position(x = <span class=\"string\">&quot;dose&quot;</span>, fun = <span class=\"string\">&quot;mean_sd&quot;</span>)</span><br><span class=\"line\">ggbarplot(</span><br><span class=\"line\">  df, x = <span class=\"string\">&quot;dose&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, fill = <span class=\"string\">&quot;#FC4E07&quot;</span>,</span><br><span class=\"line\">  add = c(<span class=\"string\">&quot;mean_sd&quot;</span>, <span class=\"string\">&quot;jitter&quot;</span>), facet = c(<span class=\"string\">&quot;group&quot;</span>, <span class=\"string\">&quot;supp&quot;</span>)</span><br><span class=\"line\">  ) +</span><br><span class=\"line\">  stat_pvalue_manual(stat.test, hide.ns = <span class=\"literal\">TRUE</span>) +</span><br><span class=\"line\">  scale_y_continuous(expand = expansion(mult = c(<span class=\"number\">0.05</span>, <span class=\"number\">0.15</span>)))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-22-1.png\" alt=\"plot of chunk unnamed-chunk-22\"></p>\n<h3 id=\"使用group变量进行分面\"><a href=\"#使用group变量进行分面\" class=\"headerlink\" title=\"使用group变量进行分面\"></a>使用group变量进行分面</h3><p>简单的plot</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Box plots</span></span><br><span class=\"line\">bxp &lt;- ggboxplot(</span><br><span class=\"line\">  df, x = <span class=\"string\">&quot;supp&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, color = <span class=\"string\">&quot;dose&quot;</span>, </span><br><span class=\"line\">   palette = <span class=\"string\">&quot;jco&quot;</span>, facet.by = <span class=\"string\">&quot;group&quot;</span></span><br><span class=\"line\">  )</span><br><span class=\"line\">bxp </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-23-1.png\" alt=\"plot of chunk unnamed-chunk-23\"></p>\n<p>Bar plots</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">bp &lt;- ggbarplot(</span><br><span class=\"line\">  df, x = <span class=\"string\">&quot;supp&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, color = <span class=\"string\">&quot;dose&quot;</span>,</span><br><span class=\"line\">  palette = <span class=\"string\">&quot;jco&quot;</span>, add = <span class=\"string\">&quot;mean_sd&quot;</span>,</span><br><span class=\"line\">  position = position_dodge(<span class=\"number\">0.8</span>),</span><br><span class=\"line\">  facet.by = <span class=\"string\">&quot;group&quot;</span></span><br><span class=\"line\">  )</span><br><span class=\"line\">bp</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-24-1.png\" alt=\"plot of chunk unnamed-chunk-24\"></p>\n<h4 id=\"执行所有两两比较-1\"><a href=\"#执行所有两两比较-1\" class=\"headerlink\" title=\"执行所有两两比较\"></a>执行所有两两比较</h4><p>Statistical test:</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">stat.test &lt;- df %&gt;%</span><br><span class=\"line\">  group_by(supp, group) %&gt;%</span><br><span class=\"line\">  t_test(len ~ dose) </span><br><span class=\"line\">stat.test</span><br></pre></td></tr></table></figure>\n\n<p>在图上添加p值:</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Box plots with p-values</span></span><br><span class=\"line\"><span class=\"comment\"># Hide ns (non-significant)</span></span><br><span class=\"line\">stat.test &lt;- stat.test %&gt;%</span><br><span class=\"line\">  add_xy_position(x = <span class=\"string\">&quot;supp&quot;</span>, dodge = <span class=\"number\">0.8</span>)</span><br><span class=\"line\">bxp + </span><br><span class=\"line\">  stat_pvalue_manual(</span><br><span class=\"line\">    stat.test, label = <span class=\"string\">&quot;p.adj.signif&quot;</span>, tip.length = <span class=\"number\">0.01</span>,</span><br><span class=\"line\">    hide.ns = <span class=\"literal\">TRUE</span></span><br><span class=\"line\">    ) +</span><br><span class=\"line\">  scale_y_continuous(expand = expansion(mult = c(<span class=\"number\">0.01</span>, <span class=\"number\">0.1</span>)))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-26-1.png\" alt=\"plot of chunk unnamed-chunk-26\"></p>\n<p>Bar plots </p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">stat.test &lt;- stat.test %&gt;%</span><br><span class=\"line\">  add_xy_position(x = <span class=\"string\">&quot;supp&quot;</span>, fun = <span class=\"string\">&quot;mean_sd&quot;</span>, dodge = <span class=\"number\">0.8</span>)</span><br><span class=\"line\">bp + </span><br><span class=\"line\">  stat_pvalue_manual(</span><br><span class=\"line\">    stat.test, label = <span class=\"string\">&quot;p.adj.signif&quot;</span>, tip.length = <span class=\"number\">0.01</span>,</span><br><span class=\"line\">    hide.ns = <span class=\"literal\">TRUE</span></span><br><span class=\"line\">    ) +</span><br><span class=\"line\">  scale_y_continuous(expand = expansion(mult = c(<span class=\"number\">0.01</span>, <span class=\"number\">0.1</span>)))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-27-1.png\" alt=\"plot of chunk unnamed-chunk-27\"></p>\n<h4 id=\"与参照组进行两两比较-1\"><a href=\"#与参照组进行两两比较-1\" class=\"headerlink\" title=\"与参照组进行两两比较\"></a>与参照组进行两两比较</h4><p>Statistical test:</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">stat.test &lt;- df %&gt;%</span><br><span class=\"line\">  group_by(supp, group) %&gt;%</span><br><span class=\"line\">  t_test(len ~ dose, ref.group = <span class=\"string\">&quot;0.5&quot;</span>)</span><br><span class=\"line\">stat.test</span><br></pre></td></tr></table></figure>\n\n<p>Box plots with p-values</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">stat.test &lt;- stat.test %&gt;%</span><br><span class=\"line\">  add_xy_position(x = <span class=\"string\">&quot;supp&quot;</span>, dodge = <span class=\"number\">0.8</span>)</span><br><span class=\"line\">bxp + </span><br><span class=\"line\">  stat_pvalue_manual(</span><br><span class=\"line\">    stat.test, label = <span class=\"string\">&quot;p.adj.signif&quot;</span>, tip.length = <span class=\"number\">0.01</span></span><br><span class=\"line\">    ) +</span><br><span class=\"line\">  scale_y_continuous(expand = expansion(mult = c(<span class=\"number\">0.01</span>, <span class=\"number\">0.1</span>)))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-29-1.png\" alt=\"plot of chunk unnamed-chunk-29\"></p>\n<p>Bar plots with p-values</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">stat.test &lt;- stat.test %&gt;%</span><br><span class=\"line\">  add_xy_position(x = <span class=\"string\">&quot;supp&quot;</span>, fun = <span class=\"string\">&quot;mean_sd&quot;</span>, dodge = <span class=\"number\">0.8</span>)</span><br><span class=\"line\">bp + </span><br><span class=\"line\">  stat_pvalue_manual(</span><br><span class=\"line\">    stat.test, label = <span class=\"string\">&quot;p.adj.signif&quot;</span>, tip.length = <span class=\"number\">0.01</span></span><br><span class=\"line\">    ) +</span><br><span class=\"line\">  scale_y_continuous(expand = expansion(mult = c(<span class=\"number\">0.01</span>, <span class=\"number\">0.1</span>)))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-11-26-boxplot/unnamed-chunk-30-1.png\" alt=\"plot of chunk unnamed-chunk-30\"></p>\n<h2 id=\"version\"><a href=\"#version\" class=\"headerlink\" title=\"version\"></a>version</h2><figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">sessionInfo()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">## R version 4.0.2 (2020-06-22)</span><br><span class=\"line\">## Platform: x86_64-w64-mingw32&#x2F;x64 (64-bit)</span><br><span class=\"line\">## Running under: Windows 10 x64 (build 18363)</span><br><span class=\"line\">## </span><br><span class=\"line\">## Matrix products: default</span><br><span class=\"line\">## </span><br><span class=\"line\">## locale:</span><br><span class=\"line\">## [1] LC_COLLATE&#x3D;Chinese (Simplified)_China.936  LC_CTYPE&#x3D;Chinese (Simplified)_China.936   </span><br><span class=\"line\">## [3] LC_MONETARY&#x3D;Chinese (Simplified)_China.936 LC_NUMERIC&#x3D;C                              </span><br><span class=\"line\">## [5] LC_TIME&#x3D;Chinese (Simplified)_China.936    </span><br><span class=\"line\">## </span><br><span class=\"line\">## attached base packages:</span><br><span class=\"line\">## [1] stats     graphics  grDevices utils     datasets  methods   base     </span><br><span class=\"line\">## </span><br><span class=\"line\">## other attached packages:</span><br><span class=\"line\">## [1] rstatix_0.6.0 ggpubr_0.4.0  ggplot2_3.3.2</span><br><span class=\"line\">## </span><br><span class=\"line\">## loaded via a namespace (and not attached):</span><br><span class=\"line\">##  [1] tidyselect_1.1.0  xfun_0.19         purrr_0.3.4       haven_2.3.1       carData_3.0-4    </span><br><span class=\"line\">##  [6] colorspace_1.4-1  vctrs_0.3.4       generics_0.1.0    htmltools_0.5.0   yaml_2.2.1       </span><br><span class=\"line\">## [11] rlang_0.4.8       pillar_1.4.6      foreign_0.8-80    glue_1.4.2        withr_2.3.0      </span><br><span class=\"line\">## [16] readxl_1.3.1      lifecycle_0.2.0   stringr_1.4.0     munsell_0.5.0     ggsignif_0.6.0   </span><br><span class=\"line\">## [21] gtable_0.3.0      cellranger_1.1.0  ggsci_2.9         zip_2.1.1         evaluate_0.14    </span><br><span class=\"line\">## [26] labeling_0.4.2    knitr_1.30        rio_0.5.16        forcats_0.5.0     curl_4.3         </span><br><span class=\"line\">## [31] highr_0.8         broom_0.7.2       Rcpp_1.0.5        backports_1.2.0   scales_1.1.1     </span><br><span class=\"line\">## [36] jsonlite_1.7.1    abind_1.4-5       farver_2.0.3      hms_0.5.3         digest_0.6.27    </span><br><span class=\"line\">## [41] stringi_1.5.3     openxlsx_4.2.3    dplyr_1.0.2       grid_4.0.2        tools_4.0.2      </span><br><span class=\"line\">## [46] magrittr_1.5      tibble_3.0.4      crayon_1.3.4      tidyr_1.1.2       car_3.0-10       </span><br><span class=\"line\">## [51] pkgconfig_2.0.3   ellipsis_0.3.1    data.table_1.13.2 rmarkdown_2.5     R6_2.5.0         </span><br><span class=\"line\">## [56] compiler_4.0.2</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">getwd()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">## [1] &quot;E:&#x2F;02GDL&#x2F;Blog&#x2F;ShuilinLiao.github.io&#x2F;source&#x2F;_posts&quot;</span><br></pre></td></tr></table></figure>\n\n<p>更多相关问题，请参考 <a href=\"https://www.datanovia.com/en/blog/tag/ggpubr/\">ggpubr FAQ</a></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://www.datanovia.com/en/blog/how-to-add-p-values-to-ggplot-facets/\">HOW TO ADD P-VALUES TO GGPLOT FACETS</a></p>\n<p>参考文章如引起任何侵权问题，可以与我<a href=\"liaoshuilin@outlook.com\">联系</a>，谢谢。</p>\n","categories":["R","Visualization"],"tags":["R","ggplot","p-value"]},{"title":"Metabolism in heart","url":"/2020/11/26/2020-11-26-heart_metabolism/","content":"<p>关于心脏当中的代谢介绍。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"能量代谢概述\"><a href=\"#能量代谢概述\" class=\"headerlink\" title=\"能量代谢概述\"></a>能量代谢概述</h2><p>1.在第一阶段，<strong>食物中的大分子断裂成较小的分子</strong>。这个过程叫消化。蛋白质被降解成20种氨基酸，多糖被降解成简单的糖（如葡萄糖），脂肪被分解成甘油和脂肪酸。这个阶段属于能量抽取的准备阶段，没有捕获有用的能量。</p>\n<p>2.在第二阶段，第一阶段产生的各种小分子物质进一步降解成少数几种在代谢中起中心作用的简单单元（simple units)。实际上，<strong>糖、脂肪酸、和一些氨基酸被转化成乙酰辅酶A</strong>。在这个过程中能合成一些ATP，但合成量比后续的第三阶段少得多。</p>\n<p>3.第三阶段，<strong>乙酰辅酶A完全氧化产生ATP</strong>。第三阶段有柠檬酸循环和氧化磷酸化。此处是燃料分子氧化过程中最后的共有的代谢途径。<strong>乙酰辅酶A将乙酰基带入三羧酸循环（或称TCA循环/Krebs循环/柠檬酸循环）</strong>，并在此被完全氧化成CO2。每个乙酰基氧化过程中有四对电子发生转移，三对转移给NAD+，一对转移给FAD。随着这些还原型载体将电子传递给O2就形成了质子梯度，后者可以用来合成ATP。</p>\n<p><img src=\"/images/2020-11-26-heart_metabolism/pic1.png\" alt=\"pic1\"></p>\n<h2 id=\"糖酵解\"><a href=\"#糖酵解\" class=\"headerlink\" title=\"糖酵解\"></a>糖酵解</h2><p>1.糖酵解在<strong>细胞质</strong>中进行。</p>\n<p>2.<strong>糖酵解途径是将一个葡萄糖分子代谢成两个丙酮酸</strong>，同时产生两个ATP的代谢途径。糖酵解不需要氧气。因此糖酵解途径在地球出现足量氧气之前，生物建立了这种代谢途径。</p>\n<p>3.糖酵解分三个阶段：第一阶段，葡萄糖转化成果糖1,6-二磷酸，有三个反应步骤（磷酸化，异构化，第二次磷酸化）。糖酵解起始反应的策略是将葡萄糖分子限定在细胞内，形成一种能够被转化成磷酸化三碳单位的化合物。第二阶段是将果糖1,6-二磷酸裂解成两个三碳组分，这两种三碳组分可以相互转化。在第三阶段，三碳组分氧化成丙酮酸，产生ATP。有3种关键酶控制着不可逆反应，分别为 <strong>hexokinase (HK)</strong>, <strong>phosphofructokinase (PFK)</strong>, 和<strong>pyruvate kinase (PK)</strong> 。</p>\n<p>4.丙酮酸能进一步加工，无氧条件下产生乳酸（乳酸发酵）或乙醇（乙醇发酵）。有氧条件下被彻底氧化成CO2 。</p>\n<p><img src=\"/images/2020-11-26-heart_metabolism/pic2.png\" alt=\"pic2\"></p>\n<p><img src=\"/images/2020-11-26-heart_metabolism/pic3.png\" alt=\"pic3\"></p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p><a href=\"*https://rgd.mcw.edu/rgdweb/pathway/pathwayRecord.html?processType=view&species=Human&acc_id=PW:0000640#annot*\">GLYCOLYSIS PATHWAY (PW:0000640)</a></p>\n<p>参考文章如引起任何侵权问题，可以与我<a href=\"liaoshuilin@outlook.com\">联系</a>，谢谢。</p>\n","categories":["Biological  wisdom","Metabolism"]},{"title":"如何安装R包","url":"/2020/11/24/R%E5%AE%89%E8%A3%85%E5%8C%85/","content":"<p>如何安装R并且下载安装R包。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"R安装\"><a href=\"#R安装\" class=\"headerlink\" title=\"R安装\"></a>R安装</h1><p>首先<a href=\"https://cran.r-project.org/\">安装R环境</a>，上官网选择适当的版本</p>\n<h1 id=\"Rtools\"><a href=\"#Rtools\" class=\"headerlink\" title=\"Rtools\"></a>Rtools</h1><p><a href=\"https://cran.r-project.org/bin/windows/Rtools/\">Rtools的下载安装</a>，为了方便之后下载R包</p>\n<ol>\n<li>下载</li>\n<li>安装，记得选择 默认路径 + 勾选设置环境变量 <code>Add rtools to system PATH</code></li>\n<li>在R中输入 <code>writeLines(&#39;PATH=&quot;C:\\\\rtools40\\\\usr\\\\bin;$&#123;PATH&#125;&quot;&#39;,     con = &quot;~/.Renviron&quot;)</code></li>\n<li>重启测试是否成功 在R中输入 Sys.which(“make”) 若出现  <code>## &quot;C:\\\\rtools40\\\\usr\\\\bin\\\\make.exe&quot;</code> 则表示配置成功</li>\n<li>Rstudio</li>\n</ol>\n<h1 id=\"Rstudio\"><a href=\"#Rstudio\" class=\"headerlink\" title=\"Rstudio\"></a>Rstudio</h1><p><a href=\"https://rstudio.com/products/rstudio/download/\">Rstudio的下载安装</a>，Rstudio是个IDE，代码编写的集成环境</p>\n<h1 id=\"R包的下载安装\"><a href=\"#R包的下载安装\" class=\"headerlink\" title=\"R包的下载安装\"></a>R包的下载安装</h1><p>有两种方式：</p>\n<ol>\n<li>尝试用install.packages下载安装R包，eg：<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">install.packages(<span class=\"string\">&quot;jsonlite&quot;</span>, type = <span class=\"string\">&quot;source&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n<li>利用Bioconductor安装，首先需要安装<a href=\"https://bioconductor.org/install/\">Bioconductor包</a>，<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!requireNamespace(<span class=\"string\">&quot;BiocManager&quot;</span>, quietly = <span class=\"literal\">TRUE</span>))</span><br><span class=\"line\">  install.packages(<span class=\"string\">&quot;BiocManager&quot;</span>)</span><br></pre></td></tr></table></figure>\n再用<code>BiocManager::install</code>函数安装其他所需包，如：<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">BiocManager::install(&quot;DESeq2&quot;)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p><a href=\"https://www.cnblogs.com/liugh/p/9937489.html\">Windows下使用Rtools编译R语言包</a></p>\n","categories":["R","Packages"],"tags":["R"]},{"title":"用Rmarkdown生成简历","url":"/2020/11/17/%E7%94%A8Rmarkdown%E7%94%9F%E6%88%90%E7%AE%80%E5%8E%86/","content":"<p>参考他人的模板傻瓜式用Rmarkdown生成简历</p>\n<a id=\"more\"></a>\n\n<h3 id=\"用Rmarkdown生成简历\"><a href=\"#用Rmarkdown生成简历\" class=\"headerlink\" title=\"用Rmarkdown生成简历\"></a>用Rmarkdown生成简历</h3><ul>\n<li>将Y叔发表在GitHub上的代码用git clone下来<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;GuangchuangYu&#x2F;cv.git</span><br></pre></td></tr></table></figure></li>\n<li>为避免出现函数的冲突，建议将index.Rmd中select和rename函数前<strong>声明所属包</strong>，即有关部分将改成以下代码：<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">xx[[i]] &lt;- dplyr::select(y, -c(start, end)) %&gt;%</span><br><span class=\"line\">      dplyr::rename(start=start2, end=end2)</span><br></pre></td></tr></table></figure></li>\n<li>教育经历，工作经历，发表的文章等都是一个一个的block，而简历正由这些block组成。这些信息全都存在<code>position.csv</code>中。<code>index.Rmd</code>也有部分个人信息。因此把<code>position.csv</code>和<code>index.Rmd</code>内的有关信息照着格式更改成自己的，不需要填写的用NA替代。不需要的block可直接删除（和相关代码一并删除）。</li>\n<li>在按照模板在csv修改内容的时候，不需要的行/列<strong>不要</strong>用清除内容方式，而<strong>直接进行行/列的删除</strong>，以免在后续代码的运行中空白行/列产生干扰</li>\n<li>在R命令行或者Rstudio中的脚本中输入以下命令：<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">rmarkdown::render(<span class=\"string\">&quot;index.Rmd&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n<li>随即会生成<code>.html</code>格式的简历，另存为pdf即可。</li>\n<li>在csv中把<code>position.csv</code>信息更改好之后，再用文本编辑器（此处为Notepad++）将编码方式换成UTF-8编码（此时再用csv打开会出现乱码），并将代码中关于读取positions_CN.csv的部分改成以下内容：<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">position_data &lt;- read.csv(<span class=\"string\">&#x27;positions_CN.csv&#x27;</span>,encoding = <span class=\"string\">&#x27;UTF-8&#x27;</span>) %&gt;% </span><br><span class=\"line\">  mutate_all(fill_nas) %&gt;% </span><br><span class=\"line\">  arrange(order, desc(end)) %&gt;% </span><br><span class=\"line\">  mutate(id = <span class=\"number\">1</span>:n()) %&gt;% </span><br><span class=\"line\">  nest(data = c(-id, -section)) <span class=\"comment\"># read.csv打开，并增加encoding = &#x27;UTF-8&#x27;参数</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><p><a href=\"https://mp.weixin.qq.com/s/Dz2fa83O_P5QPD8VLR7DRQ\">Y叔笔记</a></p>\n","categories":["R","Undef"],"tags":["Rmarkdown","resume"]},{"title":"关于澳科大联培的一些问题","url":"/2020/11/15/%E5%85%B3%E4%BA%8E%E6%BE%B3%E7%A7%91%E5%A4%A7%E8%81%94%E5%9F%B9%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/","content":"<div id=\"hexo-blog-encrypt\" data-wpm=\"抱歉, 这个密码看着不太对, 请再试试.\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" id=\"hbePass\" placeholder=\"\" />\n    <label for=\"hbePass\">您好, 这里需要密码.</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"d53403c112d2bf54d2055e64c577e6cac65558d3186c313e8ec4d5396305715e\">23592b36a29a8ed352de28374547362b67d7d39267b0d2501ae1b761af08aac0127076fa7a89d02cc3f099eed96ad7922db78aaefe35d776d7d5779683afdeece4b7e31ad700c8b53f9636a7b7f600749fca44ed31d744f9ed77a4e83bc4df5f5a54372411bf95fa47b679e9a560ac9e95f496a2941fbb6789c566d909132c55a3def3737e46a5fafe960241cfa5f0afb632b669f672c04b9079ce679f9726a58cc1fcbed469048d92cb18c33c46edaae4ff29953d81c5928ff2cb1580ae392b2c037228b4ff0e7d5dc4aa67daa22ec53ac0d7028959493764f2eb65ee51154e37f732e0a431e60454bb32332698ee0ea13a9ee8451802fcfae7962c0988c277e872ee040836d054a14f371a8ec3b6bc4383e1943b71d576b949d54808c725ca929eb91878a3c82766c8fa105aad584cf9ac6c452b8c9479b318e65ed58f8998aae8cdabc1430ecd2306bda6d99ed56ce010e4d4dd44c175a5dbe31e3e3d21ad6111d9c490ebbfebfdf5c54465e5c9bbcbc43879b7dc4f6ef25f5d98a7c02f06837b6e53d6fd86936dfcad3e15627514752f2aa7cefccfaf07f56dbb3b4192df5e110a43ae7f07193b76a484769a5c68d258a318742efee3a3f84c81958ab9331f1fdf060c773c22b7b29c655ed63c1b316125eaa44566b348236a3fa9aae5dcd9f52fa228a3a9d44aa86015a1fdf85ceafddb87b88d228436cff9c7b06d0c0a9516440342097296750b6b514518424382a9c2691a2c53f77bbc7db829fb88961b5b881947e5c8266db70a710ade50a697dcfb628ff9537f2a098b1b8573ce6625deda9caee71919bbc64e56f4e4556cfd4b653c9f75af1f0bf73a5bc64ee91bb2c4724df80fc557399e8ef5aaa853e2d860f5b1c81d444861f941181bad4d4995e2a3e641474ff4b98462bccff8e67322c9a624e032232bdb58e9cdb595e492013fd94048c2496f7e1d71436ef89dac9cafefdd4ac2c0889cd2fc25d52be244cf105eb54f487676511838632125144de636f0bc9ad9fe025965f0f2279747b37fd771574e65faf51c0ae1b9ee2667299a02dc9adf15acffb7bd32d1a45fdcaae3c5b1f609175b26fe3f32275b38a80e3a6677357e1dcee4cfc582ea492c939b644de04c6eae475294fc27cdf5f9db0602304abc304a2b334c3bcb0f69415c14335bf9a50f06cb4987cb310145e86f825e666e82ef1bc4591fcd17189baebd808fcebeb900ac91760ed8b02747499d55441b221736056b57b1ae2360e78f9cc3b14204450a337c61b90f5df68c6eed7eb0e88d82b979ed6a65249e57c02ea24b025ffa5670165cf0a4a5237b09e63a9fbae0ce2d1092caba2e8fa31e74969fa3e934b9d88c48cac23429b1c9de04f14def2dfdf7059a89651d1f082358599a7bb26424a8d3f06b3d37e067e3be47b4254d56c49426887e3be0f30711de216ed42f27b9526c159570d7a4083af745db712acd8b3c9a561cc34cc8d29580f745faf092617047a070b5ef7f73ced87d4d6361be4fe7e7092b3e77cc594d28abb41fad0dff4bb5236bb763d993de2b437c38295d1ac9b769b03584c0a0022f3295b5c6d7a47f3e31efc07dd765ed97d4cdcec1dc48c12c8260e6af3ea6a71d6ef1761e209b2ba47ebc5c49bfb1d97e93f6b11df491567f08ac6880bb86c31d965d94c10b358b3a77d50bb7d1f3c04fcf4e2b0494d20f7752995b43f4780fde4a1a1c4dccbfd6d651413780a7d4a30245e30222e3874076548c53e70795640dc13dedbbd0b08a7f86cc0a2813eec5f9f3f5b0bddf5678098ab08ff8b096fe51239a0b57e1850c6879f303825114e39a0f261a93f5be3750e8b94dc894670b23cb3fd4f58e8aa217196ca634d0f51c9bcb5f0a5d5e700259b6100a06e4e489f45ab3c845ef8985d4a44df28aec2435ad7ddb7d31b945d1f2a08d1cecc5df4c4779b4a92be5900df7fcf0785cfa9e5294634cd0ba63dd4084404b6720bcc01b2784d3ea682ee5f3ab5230204be5433cd4e9df581c3c7e0f4118f6bedfc0d56bfcfd1fa4392ded1c93d4b20a452130d24b3d86144e3abd504fff3d48317b003712e07a4436d088bdbd7e9130a556f67aa1eefef60f7f3abb0ee08f6f1c751b4116de40c6a40f023d186e85d5e14ff32f960663f57f9e117e8b9d5d474e211edcf233af94e8b780434d1e0e9c21f1352829b75308e8ebccf6a5ab0a16884286dd451460d4b3d7ab9ce13a200b1d6cd80f0e1b591ad229edac944c77442511b0b9045c6848223de935f1e9440363109a5eca906b249ca31c7540e71a4a4b6f07aafbaf728a187197211a3f99234b6a54270aef32582e53d45994f83efe9ce0357fccbbb8315af959c14de81cfd06d60917f09ce96ddd801b46e0624f6b67a6780f4bcc643c6f82ff73444c850c5d0682fb98e8154300c8a904ad46d3fa20969727f8a1ad05dddef1fa8062e9bd74528baab4a4fe4850c0842224010841cdbcea8c9d6a8f4c5a7b27bcb130838d25dc8dc1de3648c191564630ae2c131b6103de54a00f5adf4e8a2a556ba5bc5d2f8fd0711f8caa65ca327f3c9434cf330ccc401c90f82ad934c95ab3664cd1ad5faae078e1e154e8d36173aaad8c1694e4c9703f6faccc83d9b8b071138405dbd8fa759302cc44446f9c4ae98acb795891b126ed729d9eeff6bf29b18a81acc10fcf57abb445050d72e9fc39bca09186791acc5dc031a860d903a78b3442ab4db6a1066e3a73e510efd555aba120ffcc6014b995ff038fa19bacdad34aab7917aeb1cb1b92707e4d279e9dc6fd7a3feccc11d439287ae522562af69e4bf298eaea65c35c7fd9139e0d13848d7ccafc644b703e17b55cde4ee6cfe25cd8b393954cac597cc9d27ebd</script>\n</div>\n<script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","categories":["Private"],"tags":["MUST","PHD"]},{"title":"Windows上使用Linux虚拟系统","url":"/2020/10/30/windows%E4%B8%8A%E4%BD%BF%E7%94%A8linux%E8%99%9A%E6%8B%9F%E7%B3%BB%E7%BB%9F/","content":"<p>在Windows store上下载Ubuntu虚拟系统，并且安装window terminal进行登录。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"1-配置window-terminal\"><a href=\"#1-配置window-terminal\" class=\"headerlink\" title=\"1 配置window terminal\"></a>1 配置window terminal</h2><p>建议使用window terminal登陆集群，可通过Microsoft store下载<strong>window terminal</strong>以及<strong>Ubuntu 20</strong>，提供登陆界面，借用后者的ssh等命令，直接使用ssh登陆集群。  </p>\n<ul>\n<li><p>进入电脑安全模式开启cpu开关（个别电脑需要）；</p>\n</li>\n<li><p>开启window的WSL功能：前往 “启用或关闭 Windows 功能” ，然后滚动至底部，如截图所示，勾选 “适用于 Linux 的 Windows 子系统”，点击确定。它将会下载安装需要的包。安装完成之后，系统将会询问是否重启。重启设备。</p>\n</li>\n<li><p>进入Microsoft store下载Ubuntu 20和window terminal；</p>\n</li>\n<li><p>下载window terminal后，启动并选择Ubuntu。配置window terminal界面，参考 <a href=\"https://github.com/ShuilinLiao/ShuilinLiao.github.io/blob/main/source/documents/ubuntu_settings.json.txt\">配置文件</a>。<br>  想要使用鼠标选中单击即复制功能（以空格为分隔符），需要对setting文件进行设置：</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;copyOnSelect&quot;: true,</span><br><span class=\"line\">&quot;wordDelimiters&quot; : &quot;  &quot;,</span><br></pre></td></tr></table></figure>\n\n<p>  并且需要把改配置代码放在<code>&quot;profiles&quot;</code>外</p>\n</li>\n<li><p>此时Linux虚拟系统已经初步建立，进入d盘：<code>cd /mnt/d</code></p>\n</li>\n<li><p>在运行(<code>win+R</code>)或<code>cmd</code>里直接输入<code>\\\\wsl$</code>进入Ubuntu的目录，从而查看ubuntu在windows上home的目录 <code>\\\\wsl$\\Ubuntu-20.04\\home</code><br>以个人系统为例，WSL的root目录对应windows的：<code>C:\\Users\\liaos\\AppData\\Local\\Packages\\CanonicalGroupLimited.Ubuntu20.04onWindows_79rhkp1fndgsc\\LocalState\\rootfs</code>   其中AppData文件夹默认是隐藏的</p>\n</li>\n</ul>\n<h2 id=\"2-免密码登录服务器以及与服务器传输文件\"><a href=\"#2-免密码登录服务器以及与服务器传输文件\" class=\"headerlink\" title=\"2 免密码登录服务器以及与服务器传输文件\"></a>2 免密码登录服务器以及与服务器传输文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 本地进入home目录，并生成rsa密码</span></span><br><span class=\"line\">cd </span><br><span class=\"line\">ssh-keygen -t rsa</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 登录服务器</span></span><br><span class=\"line\">ssh liaoshuilin@192.168.106.31</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 将公钥复制粘贴到大型机的.ssh目录下authorized_keys（若没有，则创建）</span></span><br><span class=\"line\">cat ~/.ssh/id_rsa.pub</span><br><span class=\"line\">vi ~/.ssh/authorized_keys  </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-本地与集群传输文件\"><a href=\"#3-本地与集群传输文件\" class=\"headerlink\" title=\"3 本地与集群传输文件\"></a>3 本地与集群传输文件</h2><p>使用 <a href=\"https://www.cnblogs.com/likui360/p/6011769.html\">scp</a> 命令，在使用期先设置集群的别名信息，方便使用scp命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">echo -e &quot;Host  alias1 \\n HostName 192.114.23.43 \\n User username&quot; &gt; ~/.ssh/config </span><br></pre></td></tr></table></figure>\n<p>alias1为设置的别名，username为在集群上的用户名，最后呈现格式为</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">Host  gdl</span><br><span class=\"line\">HostName 192.114.23.43</span><br><span class=\"line\">User xxx</span><br></pre></td></tr></table></figure>\n<p>传输文件一般在本地进行command</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">scp -r alias1:/hwfssz1/filedir/  ./  # 集群传输到本地</span><br><span class=\"line\">scp file.txt  alias2:/hwfssz1/filedir/  # 本地传输到集群</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-参考链接\"><a href=\"#4-参考链接\" class=\"headerlink\" title=\"4 参考链接\"></a>4 参考链接</h2><p><a href=\"https://zouhua.top/archives/16954f4d.html\">Cygwin：Linux模拟软件</a><br><a href=\"https://www.cnblogs.com/lepeCoder/p/wsl_dir.html\">windows10 ubuntu子系统 WSL文件位置</a><br><a href=\"https://stackoverflow.com/questions/60441221/double-click-to-select-text-in-windows-terminal-selects-only-one-word\"><a href=\"https://stackoverflow.com/questions/60441221/double-click-to-select-text-in-windows-terminal-selects-only-one-word\">Double-click to select text in Windows Terminal selects only one word</a></a></p>\n","categories":["Tools","Systems"],"tags":["Ubuntu","Windows","Linux","Virtual systems"]},{"title":"Vim中如何对Snakemake代码进行高亮","url":"/2020/10/21/Vim%E4%B8%AD%E5%A6%82%E4%BD%95%E5%AF%B9Snakemake%E4%BB%A3%E7%A0%81%E8%BF%9B%E8%A1%8C%E9%AB%98%E4%BA%AE/","content":"<p>以配置文件的形式在vim中对Snakemake代码进行高亮。</p>\n<a id=\"more\"></a>\n\n<p>Snakemake的官方vim高亮配置<a href=\"https://raw.githubusercontent.com/snakemake/snakemake/master/misc/vim/syntax/snakemake.vim\">文件</a>下载，将其内容复制到名为<code>snakemake.vim</code>的文件中，将其文件复制到<code>$HOME/.vim/syntax</code>目录中（如果没有该目录，则用<code>mkdir</code>创建）。接着在<code>$HOME/.vimrc</code>添加以下命令，使得每次打开*.snk, *.smk和Snakefile文件都以特定方式高亮：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">autocmd BufNewFile,BufRead Snakefile set syntax&#x3D;snakemake</span><br><span class=\"line\">autocmd BufNewFile,BufRead *.smk set syntax&#x3D;snakemake</span><br><span class=\"line\">autocmd BufNewFile,BufRead *.snk set syntax&#x3D;snakemake</span><br></pre></td></tr></table></figure>\n\n<p>在vim中也可以强制显示高亮 ：<code>:set syntax=snakemake</code></p>\n<p>注：<code>vimrc</code>不需要source，每次添加新的内容保存后退出则自动更新。</p>\n<h3 id=\"参考链接：\"><a href=\"#参考链接：\" class=\"headerlink\" title=\"参考链接：\"></a>参考链接：</h3><ol>\n<li><a href=\"https://snakemake.readthedocs.io/en/stable/project_info/faq.html#how-do-i-enable-syntax-highlighting-in-vim-for-snakefiles\">How do I enable syntax highlighting in Vim for Snakefiles? </a></li>\n<li><a href=\"https://blog.csdn.net/nankai0912678/article/details/108671782?utm_medium=distribute.pc_relevant.none-task-blog-title-3&spm=1001.2101.3001.4242\"> 对于一个自定义的文件类型, 如何使用C, python等语言的关键字高亮方案 </a></li>\n</ol>\n","categories":["Tools","Systems"],"tags":["Tools","Vim","Snakemake"]},{"title":"Visual Studio Code连接集群配置","url":"/2020/10/21/Visual-Studio-Code%E8%BF%9E%E6%8E%A5%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE/","content":"<p>在Windows上使用Visual Studio Code免密码登录集群/服务器。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h1><p>配置远程开发首先需要安装一个名为<strong>Remote - SSH</strong>的插件，具体操作步骤如下，</p>\n<ul>\n<li>点击扩展按钮</li>\n<li>搜索<strong>Remote - SSH</strong> 、Remote -WSL 和 vscode-icons</li>\n<li>安装</li>\n</ul>\n<h1 id=\"配置VSCode\"><a href=\"#配置VSCode\" class=\"headerlink\" title=\"配置VSCode\"></a>配置VSCode</h1><p>step1: 点击VS code边栏的远程连接图标。<img src=\"/images/vscode/0.png\"></p>\n<p>step2: 点击SSH TARGETS右边的齿轮状⚙️按钮。</p>\n<p>step3: 在弹出来的<code>C:\\Users\\XXX\\.ssh\\config</code>文件中添加下面内容（即本地的<code>C:\\Users\\user_name\\.ssh\\config</code>），根据自己的用户名填写好各个字段，<code>Ctrl + s</code>保存。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Read more about SSH config files: https:&#x2F;&#x2F;linux.die.net&#x2F;man&#x2F;5&#x2F;ssh_config</span><br><span class=\"line\">Host gdl</span><br><span class=\"line\">\tHostName 192.168.106.31</span><br><span class=\"line\">\tUser liaoshuilin</span><br><span class=\"line\"> \tPort 22</span><br></pre></td></tr></table></figure>\n\n<p>step3: 参数设置 </p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Setting - Features - Terminal - Integrated &gt; Automation Shell:Linux</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;python.languageServer&quot;</span>: <span class=\"string\">&quot;Microsoft&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;terminal.integrated.shell.windows&quot;</span>: <span class=\"string\">&quot;C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;remote.SSH.remotePlatform&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;gdl&quot;</span>: <span class=\"string\">&quot;linux&quot;</span></span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   <span class=\"attr\">&quot;python.showStartPage&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">   <span class=\"attr\">&quot;explorer.confirmDelete&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">   <span class=\"attr\">&quot;window.zoomLevel&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;terminal.integrated.automationShell.windows&quot;</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;workbench.iconTheme&quot;</span>: <span class=\"string\">&quot;vscode-icons&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;workbench.colorTheme&quot;</span>: <span class=\"string\">&quot;Default Dark+&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;workbench.editor.enablePreview&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;workbench.editor.enablePreviewFromQuickOpen&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;terminal.integrated.inheritEnv&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;terminal.integrated.automationShell.linux&quot;</span>: <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>// Setting - Extension- Terminal - Remote - SSH，勾选✔ 以下项 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Remote.SSH: Allow Local Server Download</span><br><span class=\"line\">Remote.SSH: Enable Agent Forwarding</span><br><span class=\"line\">Remote.SSH: Enable Dynamic Forwarding</span><br><span class=\"line\">Remote.SSH: Use Flock</span><br><span class=\"line\">Remote.SSH: Use Local Server</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置远程服务器免密码登录\"><a href=\"#配置远程服务器免密码登录\" class=\"headerlink\" title=\"配置远程服务器免密码登录\"></a>配置远程服务器免密码登录</h1><p>这个需要windows配置有ssh工具，可以通过安装git、openssh实现。在本地打开cmd，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh-keygen # 获得本地客户端的公钥</span><br></pre></td></tr></table></figure>\n\n<p>然后一直点击Enter键，不用输入任何内容，最后会在<code>C:\\Users\\user_name\\.ssh</code>路径下生成公钥文件，可以看到有一个<code>id_rsa.pub</code>文件，然后通过FTP等方式把这个文件上传到远程服务器。进入集群SSH配置目录，<code>cd ~/.ssh</code>，查看一下是否有一个名为<code>authorized_keys</code>的文件，如果没有就创建一个，然后把刚上传的<code>id_rsa.pub</code>中的内容附到<code>authorized_keys</code>文件中，并更改文件权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">touch authorized_keys</span><br><span class=\"line\">cat ~&#x2F;id_rsa.pub &gt;&gt; authorized_keys</span><br><span class=\"line\">chmod -R 600 authorized_keys</span><br></pre></td></tr></table></figure>\n\n<p>删除 服务器中home目录下的 .vscode-server/目录后进行链接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">rm -r  ~&#x2F;.vscode-server&#x2F;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/93239107\"><strong>VS Code远程开发</strong></a></li>\n<li><a href=\"https://blog.csdn.net/yamengxi/article/details/108156610\">Windows10系统下使用VS code远程连接集群（在有跳板机的情况下）</a></li>\n</ol>\n","categories":["Tools","Systems"],"tags":["VScode","cluster"]},{"title":"Ubuntu中安装Anaconda","url":"/2020/10/15/ubuntu%E5%AE%89%E8%A3%85anaconda/","content":"<p>介绍如何在Ubuntu上下载Anaconda。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"什么是Anaconda\"><a href=\"#什么是Anaconda\" class=\"headerlink\" title=\"什么是Anaconda\"></a>什么是Anaconda</h2><p>Anaconda 是一个流行的 Python/R 数据科学和机器学习平台，大数据处理，预测分析，和科学计算。</p>\n<p>Anaconda 发行版附带了250个开源数据软件包，并且超过 7500 个软件包可以从 Anaconda 软件源中安装。它同时还包含了一个命令行工具和一个被称为”Anaconda Navigator”的图形用户界面。</p>\n<p>这个指南将会跟你解释在 Ubuntu 20.04 上的 Anaconda Python 发行版安装过程。</p>\n<h2 id=\"安装Anaconda\"><a href=\"#安装Anaconda\" class=\"headerlink\" title=\"安装Anaconda\"></a>安装Anaconda</h2><p>在写这篇文章的时候，Anaconda 最新绑定版本是 2020.02。在下载安装脚本之前，浏览<a href=\"https://www.anaconda.com/products/individual\">下载页面</a>，并且检查是否有更新的Anaconda 可用。</p>\n<ul>\n<li>在 Ubuntu 20.04 上完成下面的步骤，安装 Anaconda。使用你的浏览器或者<code>wget</code>去下载 Anaconda 安装脚本：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget -P /tmp https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>这一步可选的，但是我们推荐你去验证脚本的数据完整性。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sha256sum /tmp/Anaconda3-2020.02-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p>输出类似于：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">2b9f088b2022edb474915d9f69a803d6449d5fdb4c303041f60ac4aefcc208bb  /tmp/Anaconda3-2020.02-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p>确保上面的命令打印出来的哈希值和<a href=\"https://docs.anaconda.com/anaconda/install/hashes/lin-3-64/\">Anaconda with Python 3 on 64-bit Linux page</a>页面对应版本的 Anaconda 哈希值一样。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://docs.anaconda.com/anaconda/install/hashes/Anaconda3-2020.02-Linux-x86_64.sh-hash/</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>运行脚本启动安装进程：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">bash /tmp/Anaconda3-2020.02-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p>看到以下输出：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">Welcome to Anaconda3 2020.02</span><br><span class=\"line\">In order to continue the installation process, please review the license</span><br><span class=\"line\">agreement.</span><br><span class=\"line\">Please, press ENTER to continue</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>按<code>ENTER</code>继续。往下滑动阅读协议，使用<code>ENTER</code>按键。一旦你看完协议，你将会被询问是否接受协议条款：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">Do you approve the license terms? [yes|no]</span><br></pre></td></tr></table></figure>\n\n<p>输入<code>yes</code>接受协议，并且你会被提示选择安装路径：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">Anaconda3 will now be installed into this location:</span><br><span class=\"line\">/home/linuxize/anaconda3</span><br><span class=\"line\"></span><br><span class=\"line\">    - Press ENTER to confirm the location</span><br><span class=\"line\">    - Press CTRL-C to abort the installation</span><br><span class=\"line\">    - Or specify a different location below</span><br></pre></td></tr></table></figure>\n\n<p>安装过程将会花费一些时间，并且一旦完成，脚本将会问你是否想要运行<code>conda init</code>。输入<code>yes</code>。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">Installation finished.</span><br><span class=\"line\">Do you wish the installer to initialize Anaconda3</span><br><span class=\"line\">by running conda init? [yes|no]</span><br></pre></td></tr></table></figure>\n\n<p>这将会将命令行工具<code>conda</code>添加到系统的<code>PATH</code>环境变量中。</p>\n<ul>\n<li>想要激活 Anaconda，你可以关闭并且重新打开你的 shell 或者在当前 shell 会话中输入下面的命令，来重新加载<code>PATH</code>环境变量：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p>想要验证安装过程，在你的终端输入<code>conda</code>。</p>\n<p>就这些。你已经成功地在你的 Ubuntu 机器上安装好了 Anaconda， 你可以开始使用它了。</p>\n<h2 id=\"更新Anaconda\"><a href=\"#更新Anaconda\" class=\"headerlink\" title=\"更新Anaconda\"></a>更新Anaconda</h2><p>打开你的终端，并且输入：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">conda update --all</span><br></pre></td></tr></table></figure>\n\n<p>如果有更新，<code>conda</code>将会显示一个列表，并且提示你确认是否更新：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">The following packages will be UPDATED:</span><br><span class=\"line\"></span><br><span class=\"line\">  anaconda-navigator                          1.9.12-py37_0 --&gt; 1.9.12-py37_1</span><br><span class=\"line\">  conda                                        4.8.2-py37_0 --&gt; 4.8.3-py37_0</span><br><span class=\"line\">  conda-package-han~                   1.6.0-py37h7b6447c_0 --&gt; 1.6.1-py37h7b6447c_0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Proceed ([y]/n)? </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"卸载-Anaconda\"><a href=\"#卸载-Anaconda\" class=\"headerlink\" title=\"卸载 Anaconda\"></a>卸载 Anaconda</h2><p>如果你想从你的 Ubuntu 系统中卸载 Anaconda，移除 Anaconda 安装目录以及其他在安装过程中创建的文件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">rm -rf ~/anaconda3 ~/.condarc ~/.conda ~/.continuum</span><br></pre></td></tr></table></figure>\n\n<p>打开<code>~/.bashrc</code>，并且从环境变量中移除 Anaconda</p>\n<h2 id=\"Windows系统安装Anaconda\"><a href=\"#Windows系统安装Anaconda\" class=\"headerlink\" title=\"Windows系统安装Anaconda\"></a>Windows系统安装Anaconda</h2><ol>\n<li><p>前往<a href=\"https://docs.anaconda.com/anaconda/install/windows/\">官方下载页面</a>下载。有两个版本可供选择：Python 3.6 和 Python 2.7，选择版之后根据自己操作系统的情况点击“64-Bit Graphical Installer”或“32-Bit Graphical Installer”进行下载。</p>\n</li>\n<li><p>完成下载之后，双击下载文件，启动安装程序。</p>\n<p>① 如果在安装过程中遇到任何问题，那么暂时地关闭杀毒软件，并在安装程序完成之后再打开。</p>\n<p>② 如果在安装时选择了“为所有用户安装”，则卸载Anaconda然后重新安装，只为“我这个用户”安装。</p>\n</li>\n<li><p>选择“Next”。</p>\n</li>\n<li><p>阅读许可证协议条款，然后勾选“I Agree”并进行下一步。</p>\n</li>\n<li><p>除非是以管理员身份为所有用户安装，否则仅勾选“Just Me”并点击“Next”。</p>\n</li>\n<li><p>在“Choose Install Location”界面中选择安装Anaconda的目标路径，然后点击“Next”。</p>\n<p>① 目标路径中不能含有空格，同时不能是“unicode”编码。</p>\n<p>② 除非被要求以管理员权限安装，否则不要以管理员身份安装。</p>\n</li>\n<li><p>在“Advanced Installation Options”中不要勾选“Add Anaconda to my PATH environment variable.”（“添加Anaconda至我的环境变量。”）。因为如果勾选，则将会影响其他程序的使用。如果使用Anaconda，则通过打开Anaconda Navigator或者在开始菜单中的“Anaconda Prompt”（类似macOS中的“终端”）中进行使用。</p>\n<p>除非你打算使用多个版本的Anaconda或者多个版本的Python，否则便勾选“Register Anaconda as my default Python 3.6”。</p>\n<p>然后点击“Install”开始安装。如果想要查看安装细节，则可以点击“Show Details”。</p>\n</li>\n<li><p>点击“Next”。</p>\n</li>\n<li><p>进入“Thanks for installing Anaconda!”界面则意味着安装成功，点击“Finish”完成安装。</p>\n<p>如果你不想了解“Anaconda云”和“Anaconda支持”，则可以不勾选“Learn more about Anaconda Cloud”和“Learn more about Anaconda Support”。</p>\n</li>\n<li><p>验证安装结果。可选以下任意方法：</p>\n<p>① “开始 → Anaconda3（64-bit）→ Anaconda Navigator”，若可以成功启动Anaconda Navigator则说明安装成功。</p>\n<p>② “开始 → Anaconda3（64-bit）→ 右键点击Anaconda Prompt → 以管理员身份运行”，在Anaconda Prompt中输入 conda list ，可以查看已经安装的包名和版本号。若结果可以正常显示，则说明安装成功。</p>\n</li>\n</ol>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://cloud.tencent.com/developer/article/1649008\">如何在 Ubuntu 20.04 上安装 Anaconda</a><br><a href=\"https://zhuanlan.zhihu.com/p/32925500\">Anaconda介绍、安装及使用教程</a></p>\n","categories":["Tools","Systems"],"tags":["Ubuntu","Anaconda"]},{"title":"如何用Hexo+Github搭建个人博客2","url":"/2020/10/04/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A22/","content":"<p>如何用Hexo+Github搭建个人博客（下）。主要涉及分类和标签的添加、文章加密和主题的配置等。<br><a id=\"more\"></a></p>\n<h1 id=\"添加分类和标签\"><a href=\"#添加分类和标签\" class=\"headerlink\" title=\"添加分类和标签\"></a>添加分类和标签</h1><h2 id=\"创建“分类”选项\"><a href=\"#创建“分类”选项\" class=\"headerlink\" title=\"创建“分类”选项\"></a>创建“分类”选项</h2><h3 id=\"生成“分类”页并添加tpye属性\"><a href=\"#生成“分类”页并添加tpye属性\" class=\"headerlink\" title=\"生成“分类”页并添加tpye属性\"></a>生成“分类”页并添加tpye属性</h3><p>打开命令行，进入博客所在文件夹。执行命令<br><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure><br>成功后会提示：<br><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">INFO  Created: ~/Documents/blog/source/categories/index.md</span><br></pre></td></tr></table></figure><br>根据上面的路径，找到<code>index.md</code>这个文件，打开后默认内容是这样的：<br><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 文章分类</span><br><span class=\"line\">date: 2018-10-31 13:47:40</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure><br>添加<code>type: &quot;categories&quot;</code>到内容中，添加后是这样的：<br><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 文章分类</span><br><span class=\"line\">date: 2018-10-31 13:47:40</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure><br>保存并关闭文件。</p>\n<h3 id=\"给文章添加“categories”属性\"><a href=\"#给文章添加“categories”属性\" class=\"headerlink\" title=\"给文章添加“categories”属性\"></a>给文章添加“categories”属性</h3><p>打开需要添加分类的文章，为其添加categories属性。下方的<code>categories: web前端</code>表示添加这篇文章到“web前端”这个分类。注意：hexo一篇文章只能属于一个分类，也就是说如果在“- web前端”下方添加“-xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- web前端”下的 “-xxx ”分类）。<br><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo博客+Github博客教程：03添加分类，标签</span><br><span class=\"line\">date: 2018-11-01 14:17:46</span><br><span class=\"line\">categories: </span><br><span class=\"line\">- hexo</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure><br>至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了<code>categories: xxx</code>的文章才会被收录到首页的“分类”中。</p>\n<h2 id=\"创建“标签”选项\"><a href=\"#创建“标签”选项\" class=\"headerlink\" title=\"创建“标签”选项\"></a>创建“标签”选项</h2><h3 id=\"生成“标签”页并添加tpye属性\"><a href=\"#生成“标签”页并添加tpye属性\" class=\"headerlink\" title=\"生成“标签”页并添加tpye属性\"></a>生成“标签”页并添加tpye属性</h3><p>打开命令行，进入博客所在文件夹。执行命令<br><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new page tags</span><br></pre></td></tr></table></figure><br>成功后会提示：<br><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">INFO  Created: ~/Documents/blog/source/tags/index.md</span><br></pre></td></tr></table></figure><br>根据上面的路径，找到<code>index.md</code>这个文件，打开后默认内容是这样的：<br><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2018-10-31 13:47:40</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure><br>添加<code>type: &quot;tags&quot;</code>到内容中，添加后是这样的：<br><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 文章分类</span><br><span class=\"line\">date: 2018-10-31 13:47:40</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure><br>保存并关闭文件。</p>\n<h3 id=\"给文章添加“tags”属性\"><a href=\"#给文章添加“tags”属性\" class=\"headerlink\" title=\"给文章添加“tags”属性\"></a>给文章添加“tags”属性</h3><p>打开需要添加标签的文章，为其添加tags属性。下方的<code>tags:</code>下方的<code>- jQuery</code> <code>- 表格</code> <code>- 表单验证</code>就是这篇文章的标签了<br><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo博客+Github博客教程：03添加分类，标签</span><br><span class=\"line\">date: 2018-11-01 14:17:46</span><br><span class=\"line\">categories: </span><br><span class=\"line\">- 基础知识</span><br><span class=\"line\">- hexo</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- hexo</span><br><span class=\"line\">- github</span><br><span class=\"line\">- 博客</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure><br>至此，成功给文章添加分类，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了<code>tags: xxx</code>的文章才会被收录到首页的“标签”中。</p>\n<h1 id=\"文章加密\"><a href=\"#文章加密\" class=\"headerlink\" title=\"文章加密\"></a>文章加密</h1><ol>\n<li>安装 <code>Hexo-blog-encrypt</code> 插件</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure>\n<ol>\n<li>修改 _config.yml</li>\n</ol>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># Security</span></span><br><span class=\"line\">encrypt:</span><br><span class=\"line\">  enable: true # 开启为true，关闭为false</span><br></pre></td></tr></table></figure>\n<p><code>default_template</code> ，这个是指在文章详情页，我们看到的输入密码阅读的模板，同理，这个也是针对所有文章的。<br> 最后的 <code>content</code> 显示 <code>div</code> 的 <code>id</code> 必须 是 <code>encrypt-blog</code>同时为了好看，也希望进行隐藏。<br> 必须要有一个 <code>input</code> 输入框，<code>id</code> 必须是<code>&quot;pass&quot;</code>，用来供用户输入密码。<br> 输入密码之后，务必要有一个触发器，用来调用<code>decryptAES</code> 函数。样例中以 <code>button</code> 来触发。</p>\n<ol>\n<li><p>文章开头设置</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: hello world</span><br><span class=\"line\">date: </span><br><span class=\"line\">categories: </span><br><span class=\"line\"><span class=\"bullet\">-</span> cate1</span><br><span class=\"line\">   tags:</span><br><span class=\"line\"><span class=\"bullet\">    -</span> tag1</span><br><span class=\"line\"><span class=\"bullet\">    -</span> tag2</span><br><span class=\"line\">   password: xxx</span><br><span class=\"line\">   abstract: &#x27;有东西被加密了, 请输入密码查看.&#x27;</span><br><span class=\"line\">   message: &#x27;您好, 这里需要密码.&#x27;</span><br><span class=\"line\">   wrong<span class=\"emphasis\">_pass_</span>message: &#x27;抱歉, 这个密码看着不太对, 请再试试.&#x27;</span><br><span class=\"line\">   wrong<span class=\"emphasis\">_hash_</span>message: &#x27;抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容&#x27;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"主题优化\"><a href=\"#主题优化\" class=\"headerlink\" title=\"主题优化\"></a>主题优化</h1><h2 id=\"设置site基本信息\"><a href=\"#设置site基本信息\" class=\"headerlink\" title=\"设置site基本信息\"></a>设置site基本信息</h2><p>打开站点文件 blog/_config.yml，设置博客的基础信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Site</span><br><span class=\"line\">title: &quot;滴水穿石&quot;</span><br><span class=\"line\">subtitle: &quot;action like a dog&quot;</span><br><span class=\"line\">author: ShuilinL</span><br><span class=\"line\">description: &quot;种一棵树最好的时间是十年前，其次是现在&quot;</span><br><span class=\"line\">keywords: &#39;Bioinformatics&#39;</span><br><span class=\"line\">language: zh-CN</span><br><span class=\"line\">timezone:</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置主题风格\"><a href=\"#设置主题风格\" class=\"headerlink\" title=\"设置主题风格\"></a>设置主题风格</h2><p>下载自己喜欢的主题文件，可以到<a href=\"https://link.zhihu.com/?target=https%3A//link.jianshu.com/%3Ft%3Dhttps%3A//github.com/hexojs/hexo/wiki/Themes\">这里</a>找。放到Hexo目录下的themes文件夹下，然后在config.yml文件中找到。</p>\n<p>打开主题配置文件 <code>thems/next/config.yml</code>，修改<code>scheme</code>主题风格</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># ---------------------------------------------------------------</span><br><span class=\"line\"># Scheme Settings</span><br><span class=\"line\"># ---------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"># Schemes</span><br><span class=\"line\">#scheme: Muse</span><br><span class=\"line\">#scheme: Mist</span><br><span class=\"line\">#scheme: Pisces</span><br><span class=\"line\">scheme: Gemini</span><br><span class=\"line\"></span><br><span class=\"line\"># Dark Mode</span><br><span class=\"line\">darkmode: true</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置菜单项显示文本和图标\"><a href=\"#设置菜单项显示文本和图标\" class=\"headerlink\" title=\"设置菜单项显示文本和图标\"></a>设置菜单项显示文本和图标</h2><p>设置菜单项文件目录和对应图标：打开 themes/next/_config.yml 文件，搜索 menu 关键字，修改对应图标名称或者新增对应 menu 的图标。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: &#x2F; || fa fa-home</span><br><span class=\"line\">  about: &#x2F;about&#x2F; || fa fa-user</span><br><span class=\"line\">  tags: &#x2F;tags&#x2F; || fa fa-tags</span><br><span class=\"line\">  categories: &#x2F;categories&#x2F; || fa fa-th</span><br><span class=\"line\">  archives: &#x2F;archives&#x2F; || fa fa-archive</span><br><span class=\"line\">  message: &#x2F;message&#x2F; || fa fa-comment</span><br><span class=\"line\">  #schedule: &#x2F;schedule&#x2F; || fa fa-calendar</span><br><span class=\"line\">  #sitemap: &#x2F;sitemap.xml || fa fa-sitemap</span><br><span class=\"line\">  #commonweal: &#x2F;404&#x2F; || fa fa-heartbeat</span><br><span class=\"line\"></span><br><span class=\"line\"># Enable &#x2F; Disable menu icons &#x2F; item badges.</span><br><span class=\"line\">menu_settings:</span><br><span class=\"line\">  icons: true</span><br><span class=\"line\">  badges: true</span><br></pre></td></tr></table></figure>\n<p>设置菜单项对应的中文： 打开 <code>themes/next/languages/zh-CN.yml</code> 文件,搜索 <code>menu</code> 关键字，修改对应中文或者新增。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">name: 简体中文</span><br><span class=\"line\">title:</span><br><span class=\"line\">  archive: 归档</span><br><span class=\"line\">  category: 分类</span><br><span class=\"line\">  tag: 标签</span><br><span class=\"line\">  schedule: 日程表</span><br><span class=\"line\">menu:</span><br><span class=\"line\">  home: 首页</span><br><span class=\"line\">  archives: 归档</span><br><span class=\"line\">  categories: 分类</span><br><span class=\"line\">  tags: 标签</span><br><span class=\"line\">  about: 关于</span><br><span class=\"line\">  search: 搜索</span><br><span class=\"line\">  message: 留言</span><br><span class=\"line\">  schedule: 日程表</span><br><span class=\"line\">  sitemap: 站点地图</span><br><span class=\"line\">  commonweal: 公益 404</span><br></pre></td></tr></table></figure>\n<p>创建菜单项对应文件目录：在终端窗口下，cd到博客目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd your-hexo-site</span><br><span class=\"line\">hexo new page about</span><br></pre></td></tr></table></figure>\n<p>编辑菜单项的新建页面 <code>blog/source/about/index.md</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 关于</span><br><span class=\"line\">date: 2020-04-02 09:14:53</span><br><span class=\"line\">layout: page</span><br><span class=\"line\">type: about</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<h2 id=\"头像设置\"><a href=\"#头像设置\" class=\"headerlink\" title=\"头像设置\"></a>头像设置</h2><p>添加头像： 打开 <code>themes/next/_config.yml</code> 文件，搜索 <code>Sidebar Avatar</code> 关键字，在<code>url</code>后添加头像图片地址，图片需要存放在<code>themes/next/source/images</code>,若没有则新建该目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Sidebar Avatar</span><br><span class=\"line\">avatar: </span><br><span class=\"line\">  # Replace the default image and set the url here.</span><br><span class=\"line\">  url: &#x2F;images&#x2F;avatar.png </span><br><span class=\"line\">  # If true, the avatar will be dispalyed in circle.</span><br><span class=\"line\">  rounded: true</span><br><span class=\"line\">  # If true, the avatar will be rotated with the cursor.</span><br><span class=\"line\">  rotated: true</span><br><span class=\"line\">  opacity: 1  # 透明度</span><br></pre></td></tr></table></figure>\n<h2 id=\"返回网页头尾和显示浏览进度\"><a href=\"#返回网页头尾和显示浏览进度\" class=\"headerlink\" title=\"返回网页头尾和显示浏览进度\"></a>返回网页头尾和显示浏览进度</h2><p>打开 <code>themes/next/_config.yml</code> ,搜索关键字 <code>scrollpercent</code> ,把 <code>false</code> 改为 <code>true</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">back2top:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # Back to top in sidebar.</span><br><span class=\"line\">  sidebar: true</span><br><span class=\"line\">  # Scroll percent label in b2t button.</span><br><span class=\"line\">  scrollpercent: true</span><br></pre></td></tr></table></figure>\n<h2 id=\"首页只显示摘要\"><a href=\"#首页只显示摘要\" class=\"headerlink\" title=\"首页只显示摘要\"></a>首页只显示摘要</h2><p>有时文章比较长，或者想首页更简洁一些，希望在首页只显示摘要而不是全文。Hexo是支持摘要的功能的，只要在文章中插入代码：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: Hexo示例文档</span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\">本篇为Hexo示例文档.  # 这里是摘要部分,写1~2句话,就实现不全显示博文了..</span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- more --&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">### 下面是正常的 markdown 博客,就可以了.......</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"侧栏设置\"><a href=\"#侧栏设置\" class=\"headerlink\" title=\"侧栏设置\"></a>侧栏设置</h2><h3 id=\"侧边栏设置和社交图片设计\"><a href=\"#侧边栏设置和社交图片设计\" class=\"headerlink\" title=\"侧边栏设置和社交图片设计\"></a>侧边栏设置和社交图片设计</h3><p>打开 <code>themes/next/_config.yml</code> 文件,搜索关键字 <code>social</code> ,然后添加社交站点名称与地址即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">social:</span><br><span class=\"line\">  GitHub: https:&#x2F;&#x2F;github.com&#x2F;ShuilinLiao || fab fa-github</span><br><span class=\"line\">  E-Mail: liaoshuilin@outlook.com || fa fa-envelope</span><br><span class=\"line\">  #Weibo: https:&#x2F;&#x2F;weibo.com&#x2F;yourname || fab fa-weibo</span><br><span class=\"line\">  #Google: https:&#x2F;&#x2F;plus.google.com&#x2F;yourname || fab fa-google</span><br><span class=\"line\">  #Twitter: https:&#x2F;&#x2F;twitter.com&#x2F;yourname || fab fa-twitter</span><br><span class=\"line\">  #FB Page: https:&#x2F;&#x2F;www.facebook.com&#x2F;yourname || fab fa-facebook</span><br><span class=\"line\">  #StackOverflow: https:&#x2F;&#x2F;stackoverflow.com&#x2F;yourname || fab fa-stack-overflow</span><br><span class=\"line\">  #YouTube: https:&#x2F;&#x2F;youtube.com&#x2F;yourname || fab fa-youtube</span><br><span class=\"line\">  #Instagram: https:&#x2F;&#x2F;instagram.com&#x2F;yourname || fab fa-instagram</span><br><span class=\"line\">  #Skype: skype:yourname?call|chat || fab fa-skype</span><br><span class=\"line\">  </span><br><span class=\"line\">social_icons:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  icons_only: false</span><br><span class=\"line\">  transition: false</span><br></pre></td></tr></table></figure>\n<h3 id=\"定阅RSS\"><a href=\"#定阅RSS\" class=\"headerlink\" title=\"定阅RSS\"></a>定阅RSS</h3><p><code>RSS</code>定阅某个网址后，该网址更新所有新内容将以标题或者摘要形式推送给你，你只需要点击<code>RSS</code>链接即可以跳转到该文章网址，从而避免搜索网址后大规模查询该文章。首先需要加载插件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n<p>站点配置文件<code>_config.yml</code>，添加如下配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># feed</span><br><span class=\"line\"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo-generator-feed</span><br><span class=\"line\">feed:</span><br><span class=\"line\">  type: atom</span><br><span class=\"line\">  path: atom.xml</span><br><span class=\"line\">  limit: 20</span><br><span class=\"line\">  hub:</span><br><span class=\"line\">  content:</span><br></pre></td></tr></table></figure>\n<h2 id=\"开启版权声明\"><a href=\"#开启版权声明\" class=\"headerlink\" title=\"开启版权声明\"></a>开启版权声明</h2><p>在<code>themes/next/_config.yml</code>文件内搜索关键词 <code>creative_commons</code>, 设置<code>license</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">creative_commons:</span><br><span class=\"line\">  license: by-nc-sa</span><br><span class=\"line\">  sidebar: false</span><br><span class=\"line\">  post: true</span><br><span class=\"line\">  language:</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改文章底部的那个带-号的标签\"><a href=\"#修改文章底部的那个带-号的标签\" class=\"headerlink\" title=\"修改文章底部的那个带#号的标签\"></a>修改文章底部的那个带#号的标签</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div class&#x3D;&quot;post-tags&quot;&gt;</span><br><span class=\"line\">    &#123;% for tag in post.tags %&#125;</span><br><span class=\"line\">-       &lt;a href&#x3D;&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel&#x3D;&quot;tag&quot;&gt;#&lt;&#x2F;i&gt; &#123;&#123; tag.name &#125;&#125;&lt;&#x2F;a&gt;</span><br><span class=\"line\">+\t   &lt;a href&#x3D;&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel&#x3D;&quot;tag&quot;&gt;&lt;i class&#x3D;&quot;fa fa-tag&quot;&gt;&lt;&#x2F;i&gt; &#123;&#123; tag.name &#125;&#125;&lt;&#x2F;a&gt;</span><br><span class=\"line\">    &#123;% endfor %&#125;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"本地搜索\"><a href=\"#本地搜索\" class=\"headerlink\" title=\"本地搜索\"></a>本地搜索</h2><p>安装插件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<p>打开 <code>Hexo</code> 站点的 <code>_config.yml</code>,添加配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># local search</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: search.json</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  limit: 100</span><br></pre></td></tr></table></figure>\n<p>打开 <code>themes/next/_config.yml</code> ,搜索关键字 <code>local_search</code> ,设置为 <code>true</code>：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Local Search</span><br><span class=\"line\"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-generator-searchdb</span><br><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # If auto, trigger search by changing input.</span><br><span class=\"line\">  # If manual, trigger search by pressing enter key or search button.</span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  # Show top n results per article, show all results by setting to -1</span><br><span class=\"line\">  top_n_per_article: 1</span><br><span class=\"line\">  # Unescape html strings to the readable one.</span><br><span class=\"line\">  unescape: false</span><br><span class=\"line\">  # Preload the search data when the page loads.</span><br><span class=\"line\">  preload: false</span><br></pre></td></tr></table></figure>\n<h2 id=\"博文置顶\"><a href=\"#博文置顶\" class=\"headerlink\" title=\"博文置顶\"></a>博文置顶</h2><p>安装插件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-generator-index --save</span><br><span class=\"line\">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>\n<p>然后在需要置顶的文章的<code>Front-matter</code>中对<code>top:</code>增加数字即可，数字大小反应热度：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: 如何用Hexo+Github搭建个人博客</span><br><span class=\"line\">declare: true</span><br><span class=\"line\">toc: true</span><br><span class=\"line\">categories: </span><br><span class=\"line\">\t- 工具</span><br><span class=\"line\">\t- blog</span><br><span class=\"line\">tags: </span><br><span class=\"line\">\t- Hexo</span><br><span class=\"line\">top: 100  #(数字可以调节)</span><br></pre></td></tr></table></figure>\n<h2 id=\"统计功能，统计功能-显示文章字数统计-阅读时长-总字数\"><a href=\"#统计功能，统计功能-显示文章字数统计-阅读时长-总字数\" class=\"headerlink\" title=\"统计功能，统计功能,显示文章字数统计,阅读时长,总字数\"></a>统计功能，统计功能,显示文章字数统计,阅读时长,总字数</h2><p>安装插件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>\n<p>打开 <code>themes/next/_config.yml</code> ，添加如下信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Post wordcount display settings</span><br><span class=\"line\"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-symbols-count-time</span><br><span class=\"line\">symbols_count_time:</span><br><span class=\"line\">  separated_meta: true  # false会显示一行</span><br><span class=\"line\">  item_text_post: true  # 显示属性名称,设为false后只显示图标和统计数字,不显示属性的文字</span><br><span class=\"line\">  item_text_total: true # 底部footer是否显示字数统计属性文字</span><br><span class=\"line\">  awl: 4                # 计算字数的一个设置,没设置过</span><br><span class=\"line\">  wpm: 275              # 一分钟阅读的字数</span><br></pre></td></tr></table></figure>\n<h2 id=\"每篇文章末尾统一添加“本文结束”标记\"><a href=\"#每篇文章末尾统一添加“本文结束”标记\" class=\"headerlink\" title=\"每篇文章末尾统一添加“本文结束”标记\"></a>每篇文章末尾统一添加“本文结束”标记</h2><p>在路径 /themes/next/layout/_macro 中新建 post-end-tag.swig 文件,并添加以下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">  &#123;% if not is_index %&#125;</span><br><span class=\"line\">    &lt;div style&#x3D;&quot;text-align:center;color:#bfbfbf;font-size:16px;&quot;&gt;</span><br><span class=\"line\">      &lt;span&gt;-------- 本文结束 &lt;&#x2F;span&gt;</span><br><span class=\"line\">      &lt;i class&#x3D;&quot;fa fa-&#123;&#123; config.post_end_tag.icon &#125;&#125;&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class=\"line\">      &lt;span&gt; 感谢阅读 --------&lt;&#x2F;span&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &#123;% endif %&#125;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n<p>打开 <code>themes/next/layout/_macro/post.swig</code> 文件,添加:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;#####################&#125;</span><br><span class=\"line\">    &#123;### END POST BODY ###&#125;</span><br><span class=\"line\">    &#123;#####################&#125;</span><br><span class=\"line\">\t&#123;% if config.post_end_tag.enabled and not is_index %&#125;</span><br><span class=\"line\">\t  &lt;div&gt;</span><br><span class=\"line\">\t    &#123;% include &#39;post-end-tag.swig&#39; %&#125;  # 添加内容</span><br><span class=\"line\">\t  &lt;&#x2F;div&gt;</span><br><span class=\"line\">\t&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>打开<code>blog/_config.yml</code>文件，添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">post_end_tag:</span><br><span class=\"line\">  enabled: true  # 是否开启文末的本文结束标记</span><br><span class=\"line\">  icon: paw # 结束标记之间的图标</span><br></pre></td></tr></table></figure>\n<h2 id=\"文章顶部显示更新时间\"><a href=\"#文章顶部显示更新时间\" class=\"headerlink\" title=\"文章顶部显示更新时间\"></a>文章顶部显示更新时间</h2><p>打开<code>blog/_config.yml</code> ,搜索关键字 <code>updated_at</code> 设置为 <code>true</code> ：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Post meta display settings</span><br><span class=\"line\">post_meta:</span><br><span class=\"line\">  item_text: true</span><br><span class=\"line\">  created_at: true</span><br><span class=\"line\">  updated_at:</span><br><span class=\"line\">    enable: true</span><br><span class=\"line\">    another_day: true</span><br><span class=\"line\">  categories: true</span><br></pre></td></tr></table></figure>\n<h2 id=\"给代码块添加复制功能\"><a href=\"#给代码块添加复制功能\" class=\"headerlink\" title=\"给代码块添加复制功能\"></a>给代码块添加复制功能</h2><p>打开themes/next/_config.yml，搜索关键词copy_buttom:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">codeblock:</span><br><span class=\"line\">  # Code Highlight theme</span><br><span class=\"line\">  # Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span><br><span class=\"line\">  # See: https:&#x2F;&#x2F;github.com&#x2F;chriskempson&#x2F;tomorrow-theme</span><br><span class=\"line\">  highlight_theme: night bright # 代码内置颜色背景</span><br><span class=\"line\">  # Add copy button on codeblock</span><br><span class=\"line\">  copy_button:</span><br><span class=\"line\">    enable: true # 设置为true，开启复制</span><br><span class=\"line\">    # Show text copy result.</span><br><span class=\"line\">    show_result: true</span><br><span class=\"line\">    # Available values: default | flat | mac</span><br><span class=\"line\">    style:</span><br></pre></td></tr></table></figure>\n<h2 id=\"网站标题栏背景颜色\"><a href=\"#网站标题栏背景颜色\" class=\"headerlink\" title=\"网站标题栏背景颜色\"></a>网站标题栏背景颜色</h2><p>在 <code>next/source/css/_custom/custom.styl</code> 添加如下内容，如果没有则新建：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; Custom styles.</span><br><span class=\"line\">.site-meta &#123;</span><br><span class=\"line\">  background: $blue; &#x2F;&#x2F;修改为自己喜欢的颜色</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改Logo字体\"><a href=\"#修改Logo字体\" class=\"headerlink\" title=\"修改Logo字体\"></a>修改Logo字体</h2><p>在 themes/next/source/css/_custom/custom.styl 中添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">@font-face &#123;</span><br><span class=\"line\">    font-family: Zitiming;</span><br><span class=\"line\">    src: url(&#39;&#x2F;fonts&#x2F;Zitiming.ttf&#39;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.site-title &#123;</span><br><span class=\"line\">    font-size: 40px !important;</span><br><span class=\"line\">    font-family: &#39;Zitiming&#39; !important;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置博客背景\"><a href=\"#设置博客背景\" class=\"headerlink\" title=\"设置博客背景\"></a>设置博客背景</h2><p>将想要的背景图片放入 themes/next/source/images。打开 themes/next/source/css/ _custom/custom.styl 文件，这个是 Next 故意留给用户自己个性化定制一些样式的文件，添加以下代码即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">body &#123;</span><br><span class=\"line\">    background:url(&#x2F;images&#x2F;yourbackground.jpg);</span><br><span class=\"line\">    background-repeat: no-repeat;</span><br><span class=\"line\">    background-attachment:fixed; &#x2F;&#x2F;不重复</span><br><span class=\"line\">    background-size: cover;      &#x2F;&#x2F;填充</span><br><span class=\"line\">    background-position:50% 50%;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;博客内容透明化</span><br><span class=\"line\">&#x2F;&#x2F;文章内容的透明度设置</span><br><span class=\"line\">.content-wrap &#123;</span><br><span class=\"line\">  opacity: 0.9;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;侧边框的透明度设置</span><br><span class=\"line\">.sidebar &#123;</span><br><span class=\"line\">  opacity: 0.9;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;菜单栏的透明度设置</span><br><span class=\"line\">.header-inner &#123;</span><br><span class=\"line\">  background: rgba(255,255,255,0.9);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;搜索框（local-search）的透明度设置</span><br><span class=\"line\">.popup &#123;</span><br><span class=\"line\">  opacity: 0.9;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>background:url</code> 为图片路径，也可以直接使用链接。</li>\n<li><code>background-repeat</code>：若果背景图片不能全屏，那么是否平铺显示，充满屏幕。</li>\n<li><code>background-attachment</code>：背景是否随着网页上下滚动而滚动，fixed 为固定。</li>\n<li><code>background-size</code>：图片展示大小，这里设置 100%，100% 的意义为：如果背景图片不能全屏，那么是否通过拉伸的方式将背景强制拉伸至全屏显示。</li>\n</ul>\n<p>PS : 其中 <code>header-inner</code> 不能使用 opacity 进行配置。因为 <code>header-inner</code> 包含 <code>header.swig</code> 中的所有内容。若使用 opacity 进行配置，子结点会出很多问题</p>\n<h2 id=\"添加音乐\"><a href=\"#添加音乐\" class=\"headerlink\" title=\"添加音乐\"></a>添加音乐</h2><ul>\n<li><p>选择网易云音乐没有版权的歌曲生成外链播放器；</p>\n</li>\n<li><p>将代码放到<code>./themes/next/layout/_macro/sidebar.swig</code>；</p>\n</li>\n<li><p>修改侧边栏宽度，打开主题配置文件<code>../themes/next/_config.yml</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sidebar:</span><br><span class=\"line\">  # Sidebar Position.</span><br><span class=\"line\">  position: left</span><br><span class=\"line\">  #position: right</span><br><span class=\"line\"></span><br><span class=\"line\">  # Manual define the sidebar width. If commented, will be default for:</span><br><span class=\"line\">  # Muse | Mist: 320</span><br><span class=\"line\">  # Pisces | Gemini: 240</span><br><span class=\"line\">  width: 300</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"添加近期文章\"><a href=\"#添加近期文章\" class=\"headerlink\" title=\"添加近期文章\"></a>添加近期文章</h2><p>打开<code>next/layout/_macro/sidebar.swig</code> 文件，并在其<code>if theme.links</code> 对应的 <code>endif</code> 后面：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% if theme.recent_posts %&#125;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;links-of-blogroll motion-element &#123;&#123; &quot;links-of-blogroll-&quot; + theme.recent_posts_layout  &#125;&#125;&quot;&gt;</span><br><span class=\"line\">      &lt;div class&#x3D;&quot;links-of-blogroll-title&quot;&gt;</span><br><span class=\"line\">        &lt;!-- modify icon to fire by szw --&gt;</span><br><span class=\"line\">        &lt;i class&#x3D;&quot;fa fa-history fa-&#123;&#123; theme.recent_posts_icon | lower &#125;&#125;&quot; aria-hidden&#x3D;&quot;true&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class=\"line\">        &#123;&#123; theme.recent_posts_title &#125;&#125;</span><br><span class=\"line\">      &lt;&#x2F;div&gt;</span><br><span class=\"line\">      &lt;ul class&#x3D;&quot;links-of-blogroll-list&quot;&gt;</span><br><span class=\"line\">-        &#123;% set posts &#x3D; site.posts.sort(&#39;-date&#39;) %&#125;</span><br><span class=\"line\">+        &#123;% set posts &#x3D; site.posts.sort(&#39;-date&#39;).toArray() %&#125;   # 后面修改很重要</span><br><span class=\"line\">        &#123;% for post in posts.slice(&#39;0&#39;, &#39;5&#39;) %&#125;</span><br><span class=\"line\">          &lt;li&gt;</span><br><span class=\"line\">            &lt;a href&#x3D;&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot; title&#x3D;&quot;&#123;&#123; post.title &#125;&#125;&quot; target&#x3D;&quot;_blank&quot;&gt;&#123;&#123; post.title &#125;&#125;&lt;&#x2F;a&gt;</span><br><span class=\"line\">          &lt;&#x2F;li&gt;</span><br><span class=\"line\">        &#123;% endfor %&#125;</span><br><span class=\"line\">      &lt;&#x2F;ul&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>为了配置方便，在主题的<code>_config.yml</code> 中添加了几个变量，如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">recent_posts_title: 近期文章</span><br><span class=\"line\">recent_posts_layout: block</span><br><span class=\"line\">recent_posts: true</span><br></pre></td></tr></table></figure>\n<h2 id=\"back2top-标签\"><a href=\"#back2top-标签\" class=\"headerlink\" title=\"back2top 标签\"></a>back2top 标签</h2><p>安装插件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-cake-moon-menu --save</span><br></pre></td></tr></table></figure>\n<p>然后在站点配置文件<code>_config.yml</code> 中添加以下代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">moon_menu:</span><br><span class=\"line\">  back2top:</span><br><span class=\"line\">    enable: true</span><br><span class=\"line\">    icon: fa fa-chevron-up</span><br><span class=\"line\">    func: back2top</span><br><span class=\"line\">    order: -1</span><br><span class=\"line\">  back2bottom:</span><br><span class=\"line\">    enable: true</span><br><span class=\"line\">    icon: fa fa-chevron-down</span><br><span class=\"line\">    func: back2bottom</span><br><span class=\"line\">    order: -2</span><br></pre></td></tr></table></figure>\n<h2 id=\"简体繁体一键切换\"><a href=\"#简体繁体一键切换\" class=\"headerlink\" title=\"简体繁体一键切换\"></a>简体繁体一键切换</h2><ul>\n<li>首先，我们可以在<a href=\"https://tding.top/js/tw_cn.js\">这里</a>右键另存下载简繁字体切换所需的 <code>tw_cn.js</code> 文件，我们把这个文件放到 <code>~/themes/next/source/js</code> 文件夹下。</li>\n<li><strong>修改模板</strong>，在我们想要显示简繁转换按钮的地方添加如下代码。例如，我在 NexT 主题的布局文件 <code>~/themes/next/layout/_partials/footer.swig</code> 里添加了如下代码：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div class&#x3D;&quot;translate-style&quot;&gt;</span><br><span class=\"line\">繁&#x2F;简：&lt;a id&#x3D;&quot;translateLink&quot; href&#x3D;&quot;javascript:translatePage();&quot;&gt;繁体</span><br><span class=\"line\">&lt;&#x2F;a&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;tw_cn.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class=\"line\">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class=\"line\">var defaultEncoding &#x3D; 2; &#x2F;&#x2F;网站编写字体是否繁体，1-繁体，2-简体</span><br><span class=\"line\">var translateDelay &#x3D; 0; &#x2F;&#x2F;延迟时间,若不在前, 要设定延迟翻译时间, 如100表示100ms,默认为0</span><br><span class=\"line\">var cookieDomain &#x3D; &quot;https:&#x2F;&#x2F;tding.top&#x2F;&quot;; &#x2F;&#x2F;Cookie地址, 一定要设定, 通常为你的网址</span><br><span class=\"line\">var msgToTraditionalChinese &#x3D; &quot;繁体&quot;; &#x2F;&#x2F;此处可以更改为你想要显示的文字</span><br><span class=\"line\">var msgToSimplifiedChinese &#x3D; &quot;简体&quot;; &#x2F;&#x2F;同上，但两处均不建议更改</span><br><span class=\"line\">var translateButtonId &#x3D; &quot;translateLink&quot;; &#x2F;&#x2F;默认互换id</span><br><span class=\"line\">translateInitilization();</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加pdf文件在文章内部\"><a href=\"#添加pdf文件在文章内部\" class=\"headerlink\" title=\"添加pdf文件在文章内部\"></a>添加pdf文件在文章内部</h2><p>安装插件：</p>\n<p>npm install —save hexo-pdf</p>\n<p>修改主题配置文件:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">pdf:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # Default height</span><br><span class=\"line\">  height: 500px</span><br><span class=\"line\">  pdfobject:</span><br><span class=\"line\">    # Use 2.1.1 as default, jsdelivr as default CDN, works everywhere even in China</span><br><span class=\"line\">    cdn: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;pdfobject@2.1.1&#x2F;pdfobject.min.js</span><br><span class=\"line\">    # CDNJS, provided by cloudflare, maybe the best CDN, but not works in China</span><br><span class=\"line\">    #cdn: &#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;pdfobject&#x2F;2.1.1&#x2F;pdfobject.min.js</span><br></pre></td></tr></table></figure>\n<p>文章内部添加代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">外部链接：</span><br><span class=\"line\">&#123;% pdf http:&#x2F;&#x2F;7xov2f.com1.z0.glb.clouddn.com&#x2F;bash_freshman.pdf %&#125;</span><br><span class=\"line\">本地连接：把pdf放置到source文件夹下pdf文件夹下</span><br><span class=\"line\">&#123;% pdf &#x2F;pdf&#x2F;文件名.pdf %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加打赏功能\"><a href=\"#添加打赏功能\" class=\"headerlink\" title=\"添加打赏功能\"></a>添加打赏功能</h2><p>打开<strong>theme/next/_config.yml</strong>文件，对其内容做如下修改。图片保存在 <strong>next/source/images</strong> 目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">reward_settings:</span><br><span class=\"line\">  # If true, reward will be displayed in every article by default.</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  animation: false</span><br><span class=\"line\">  #comment: 赞赏一瓶优酸乳</span><br><span class=\"line\"></span><br><span class=\"line\">reward:</span><br><span class=\"line\">  wechatpay: &#x2F;images&#x2F;wechatpay.png</span><br><span class=\"line\">  alipay: &#x2F;images&#x2F;alipay.png</span><br></pre></td></tr></table></figure>\n<h1 id=\"发布文章\"><a href=\"#发布文章\" class=\"headerlink\" title=\"发布文章\"></a>发布文章</h1><h2 id=\"使用Rmarkdown写文章\"><a href=\"#使用Rmarkdown写文章\" class=\"headerlink\" title=\"使用Rmarkdown写文章\"></a>使用Rmarkdown写文章</h2><p>直接使用kinr包的knit函数将Rmd转化成md格式，但是尤其注意一定要把图片放在同目录下的figure文件夹中。<br>在Hexo系统下的source/_posts创建一个test.Rmd文件。在R里面运行下面两行命令：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"code\"><pre><span class=\"line\">setwd(<span class=\"string\">&quot;E:/02GDL/Blog/ShuilinLiao.github.io/source/_posts&quot;</span>) <span class=\"comment\">#这里写上你自己_posts所在的路径  </span></span><br><span class=\"line\">knitr::knit(input = <span class=\"string\">&quot;boxplot.Rmd&quot;</span>) <span class=\"comment\">#没有安装包的请加载knitr包</span></span><br><span class=\"line\"><span class=\"comment\"># rmarkdown::render(&#x27;boxplot.Rmd&#x27;, output_file=&#x27;boxplot.md&#x27;, output_dir=&#x27;boxplot&#x27;)</span></span><br></pre></td></tr></table></figure>\n<p>hexo所在目录，<code>hexo g</code>, <code>hexo s</code> 预览一下效果</p>\n<h2 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h2><p>默认情况下，在 hexo 中新建一篇<code>markdown博文</code>，在文章中插入本地图片，再部署到 github 上面，是无法显示这些图片的。<br>首先找到博客根目录下面的<code>_config.yml</code>文件，修改<code>post_assrt_folder</code>的值为<code>true</code>.<br>接着 git bash 切换到博客根目录下面，安装第三方插件<code>hexo-assrt-image</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>\n<p>接着<code>hexo new &quot;文章名&quot;</code> 新建一篇文章，会发现<code>source/_posts/</code>目录下面会生成一个和 markdown 文件同名的文件夹。再将当前这篇文章中需要插入的图片放到这个文件夹中，再到 markdown 中引用该文件夹中的图片，最后<code>hexo g</code> -&gt; <code>hexo d</code>，就可以正常的查看这些图片了。</p>\n<h3 id=\"本地引用\"><a href=\"#本地引用\" class=\"headerlink\" title=\"本地引用\"></a>本地引用</h3><h4 id=\"绝对路径\"><a href=\"#绝对路径\" class=\"headerlink\" title=\"绝对路径\"></a>绝对路径</h4><p>当Hexo项目中只用到少量图片时，可以将图片统一放在source/images文件夹中，通过markdown语法访问它们。<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># source&#x2F;images&#x2F;image.jpg</span><br><span class=\"line\">![](&#x2F;images&#x2F;image.jpg)</span><br></pre></td></tr></table></figure><br>图片既可以在首页内容中访问到，也可以在文章正文中访问到。</p>\n<h4 id=\"相对路径\"><a href=\"#相对路径\" class=\"headerlink\" title=\"相对路径\"></a>相对路径</h4><ul>\n<li>图片除了可以放在统一的<code>images</code>文件夹中，还可以放在文章自己的目录中。文章的目录可以通过配置<code>_config.yml</code>来生成。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># _config.yml</span><br><span class=\"line\">post_asset_folder: true</span><br></pre></td></tr></table></figure>\n<p>将<code>_config.yml</code>文件中的配置项<code>post_asset_folder</code>设为<code>true</code>后，执行命令<code>$ hexo new post_name</code>，在<code>source/_posts</code>中会生成文章<code>post_name.md</code>和同名文件夹<code>post_name</code>。将图片资源放在<code>post_name</code>中，文章就可以使用相对路径引用图片资源了。</p>\n<ul>\n<li><p>git bash安装插件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install https:&#x2F;&#x2F;github.com&#x2F;7ym0n&#x2F;hexo-asset-image --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用标签插件语法。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># _posts&#x2F;post_name&#x2F;image.jpg</span><br><span class=\"line\">&#123;% asset_img image.jpg This is an image %&#125;</span><br></pre></td></tr></table></figure>\n<p>其中test.jpg就是你要引用的图片，我这里就是image.jpg，后面的This is an test image是图片描述，可以自己修改。</p>\n</li>\n</ul>\n<h2 id=\"渲染公式\"><a href=\"#渲染公式\" class=\"headerlink\" title=\"渲染公式\"></a>渲染公式</h2><p>安装渲染器<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-renderer-marked --save </span><br><span class=\"line\">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure></p>\n<p>修改配置文件<br>到主题配置文件中<code>_config.yml</code>，找到<code>mathjax</code>，将其修改为<code>true</code>即可</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mathjax:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>文章渲染标签<br>为加快渲染速度，渲染器只会在标签中有mathjax: true的文章中使用利用mathjax渲染。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">燃料消耗问题</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2020-01-21 17:55:00</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span> <span class=\"string\">算法</span></span><br><span class=\"line\"><span class=\"attr\">comments:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">mathjax:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"添加评论和留言板功能\"><a href=\"#添加评论和留言板功能\" class=\"headerlink\" title=\"添加评论和留言板功能\"></a>添加评论和留言板功能</h1><h2 id=\"注册-Leancloud-账号\"><a href=\"#注册-Leancloud-账号\" class=\"headerlink\" title=\"注册 Leancloud 账号\"></a>注册 Leancloud 账号</h2><p>在leancloud官网注册一个账号</p>\n<p>注册完成后进入app <code>控制面板-&gt;创建应用-&gt;创建开发版应用</code>。</p>\n<p>接下来我们配置一下我们的leancloud。点击 <code>设置-&gt;安全中心-&gt;Web 安全域名</code>，输入你的域名来保证其他人就算获取了你的appid也没办法操作你的数据库。例如，输入 <a href=\"https://shuilinliao.github.io/\">https://shuilinliao.github.io/</a></p>\n<p>接下来点击应用keys获取你的appid和appkey。</p>\n<h2 id=\"在next主题中配置valine\"><a href=\"#在next主题中配置valine\" class=\"headerlink\" title=\"在next主题中配置valine\"></a>在next主题中配置valine</h2><p>打开 _config.next.yml，找到comments栏目并开启valine。</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">comments:</span><br><span class=\"line\">  active: valine</span><br></pre></td></tr></table></figure>\n<p>往下滑动进入valine设置栏，开启valine并填入你的appid和appkey。</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">valine:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  appId:  # Your leancloud application appid</span><br><span class=\"line\">  appKey:  # Your leancloud application appkey</span><br><span class=\"line\">  placeholder: &quot;输入你的评论\\n昵称为必填项目，输入QQ号可以直接获取用户名和头像，并且省去了填写邮箱的麻烦！\\n虽然email不是必选，但是填写了email可以收到推送通知哦！&quot; # Comment box placeholder</span><br><span class=\"line\">  avatar: &quot;&quot; # Gravatar style</span><br><span class=\"line\">  meta: [nick, mail] # Custom comment header</span><br><span class=\"line\">  pageSize: 10 # Pagination size</span><br><span class=\"line\">  lang: # Language, available values: en, zh-cn</span><br><span class=\"line\">  visitor: true # Article reading statistic</span><br><span class=\"line\">  comment_count: true # If false, comment count will only be displayed in post page, not in home page</span><br><span class=\"line\">  recordIP: true # Whether to record the commenter IP</span><br><span class=\"line\">  serverURLs: # When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span><br><span class=\"line\">  enableQQ: true # Whether to enable the Nickname box to automatically get QQ Nickname and QQ Avatar</span><br><span class=\"line\">  requiredFields: [nick] # Set required fields: [nick] | [nick, mail]</span><br></pre></td></tr></table></figure>\n<p>这里稍微解释一下各个参数的用途。<br>placeholder是在用户未输入任何参数时默认显示的值；<br>avatar是默认用户头像，参考<strong><a href=\"https://link.zhihu.com/?target=https%3A//valine.js.org/avatar.html\">link</a></strong>；<br>meta是可以选择的用户信息栏；<br>enableQQ可以自动匹配用户在nick栏目的输入，若是QQ，直接拉取用户的QQ头像和昵称作为评论使用，推荐开启（目前有个bug，若用户QQ昵称小于三个字符，可能出现拉取失败，等待大佬更新）；<br>其他的配置可以参考<strong><a href=\"https://link.zhihu.com/?target=https%3A//valine.js.org/configuration.html\">link</a></strong>。</p>\n<h2 id=\"在菜单栏添加留言板\"><a href=\"#在菜单栏添加留言板\" class=\"headerlink\" title=\"在菜单栏添加留言板\"></a>在菜单栏添加留言板</h2><p>添加一个新的page</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new page guestbook</span><br></pre></td></tr></table></figure>\n<p>进入 source/guestbook/index.md。加入你想显示的内容，如：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 留言板</span><br><span class=\"line\">date: 2020-09-13 13:34:29</span><br><span class=\"line\">---</span><br><span class=\"line\"># 欢迎来到我的博客！</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; 欢迎在这里留言！任何问题都可以在这里留言，我会及时回复的，添加email可以获得更快的回复速度，在nickname栏目输入QQ号可以直接获取你的QQ头像。</span><br></pre></td></tr></table></figure>\n<p>进入 _config.next.yml， 找到menu栏目，添加留言板功能：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  guestbook: /guestbook/ || fa fa-book</span><br></pre></td></tr></table></figure>\n<p>图标支持font awesome，可以按自己喜好修改。</p>\n<p>如果有多语言支持需求，可以更改 themes/next/languages 下对应语言的翻译。</p>\n<p>en.yml:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  guestbook: guestbook</span><br></pre></td></tr></table></figure>\n<p>zh-CN.yml:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  guestbook: 留言板</span><br></pre></td></tr></table></figure>\n<p>重新生成页面即可</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br><span class=\"line\">$ hexo g -d</span><br></pre></td></tr></table></figure>\n<p>注意：在跟着上面的流程配置的时候，已经在首页配置过message功能，所以需要在站点的config文件和next主题的config文件中，把menu中关于原来的message功能删除。</p>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/50787870\">Hexo+Github博客教程3</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/50787832\">Hexo+Github博客教程2</a></li>\n<li><a href=\"https://ohlia.github.io/Wiki-site/wiki/Hexo/encrypt-hexo-post/\">hexo文章加密</a></li>\n<li><a href=\"https://zouhua.top/archives/e635378a.html\">Hexo-Next主题美化 - hua</a></li>\n<li><a href=\"https://www.dazhuanlan.com/2019/12/24/5e020032e3304/\">hexo下部署Rmd文档</a></li>\n<li><a href=\"https://tanjuntao.github.io/2019/04/28/%E8%A7%A3%E5%86%B3hexo%E4%B8%AD%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0%E5%90%8E%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/\">解决hexo中发布文章后图片无法显示的问题</a></li>\n<li><a href=\"https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/\">Hexo博客搭建之在文章中插入图片</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/257707609\">hexo + next8.0开启Valine评论系统及添加留言板功能</a></li>\n</ol>\n","categories":["Tools","Blog"],"tags":["Hexo","Github","Blog"]}]